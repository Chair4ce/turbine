{"version":3,"sources":["utils/styled.ts","components/layout/Root.tsx","components/animations/transitions.tsx","components/layout/Container.tsx","components/layout/Header.tsx","components/layout/Page.tsx","pages/index.tsx","components/layout/DataTable.tsx","components/data/LoadingSpinner.tsx","store/members/types.ts","store/members/actions.ts","pages/members/index.tsx","components/members/MemberInfobox.tsx","components/members/MemberStats.tsx","components/members/MemberDetails.tsx","pages/members/show.tsx","pages/members.tsx","styles/normalize.ts","styles/globals.ts","store/layout/types.ts","routes.tsx","store/layout/actions.ts","containers/LayoutContainer.tsx","styles/colors/brandColors.ts","styles/theme/dark.ts","styles/theme/light.ts","main.tsx","serviceWorker.ts","store/layout/reducer.ts","utils/api.ts","store/members/sagas.ts","store/members/reducer.ts","store/index.ts","index.tsx","configureStore.ts"],"names":["styled","Root","children","Wrapper","props","theme","colors","background","body","fonts","EaseIn","keyframes","Container","widths","md","breakpoints","lg","xl","brand","white","headings","HeaderInner","HeaderTitle","HeaderNav","HeaderNavLink","NavLink","Title","Header","title","exact","to","activeClassName","Page","containerPadding","IndexPage","PageContent","DataTable","columns","map","column","i","key","style","width","undefined","borders","tableOdd","MembersActionTypes","LoadingSpinner","Loader","xmlns","viewBox","cx","cy","r","stroke","fetchRequest","action","FETCH_REQUEST","fetchSuccess","data","FETCH_SUCCESS","fetchError","message","FETCH_ERROR","MembersIndexPage","fr","this","loading","length","MemberLoading","colSpan","member","id","MemberDetail","MemberName","full_name","grade","dafsc","office_symbol","TableWrapper","renderData","React","mapDispatchToProps","connect","members","errors","MemberInfobox","darken","MemberInfoboxInner","MemberInfoboxHeading","MemberStats","MemberStatsInner","MemberDetailsAttrName","transparentize","MemberDetailsRow","MemberDetailsColumn","MemberDetails","ShowMembersPage","state","fetchMembers","match","selected","find","params","memberId","duty_title","path","component","normalize","css","LayoutActionTypes","globals","Routes","styles","MembersPage","LayoutContainer","render","Consumer","store","getState","layout","setTheme","tc","dispatch","SET_THEME","layoutActions","brandColors","black","gray75","gray60","gray50","gray40","gray30","gray20","gray10","gray5","yellow","red","green","steelteal","lightTheme","lighten","monospace","fontSizes","h1","h2","h3","h4","xs","sm","heights","header","Main","history","themes","Boolean","window","location","hostname","initialState","reducer","type","payload","callApi","method","url","a","fetch","headers","Accept","JSON","stringify","res","json","handleFetch","watchFetchRequest","membersSaga","API_ENDPOINT","call","error","put","Error","stack","takeEvery","all","fork","rootSaga","createRootReducer","combineReducers","layoutReducer","membersReducer","router","connectRouter","createBrowserHistory","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","routerMiddleware","run","configureStore","INITIAL_REDUX_STATE","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9d276a4.chunk.js","sourcesContent":["import styled, { CreateStyled } from '@emotion/styled';\n\nexport interface Theme {\n    colors: {\n        background: string;\n        body: string;\n        headings: string;\n        borders: string;\n        tableOdd: string;\n        brand: string;\n        black: string;\n        white: string;\n    };\n    fonts: {\n        body: string;\n        headings: string;\n        monospace: string;\n    };\n    fontSizes: {\n        h1: string;\n        h2: string;\n        h3: string;\n        h4: string;\n    };\n    containerPadding: string;\n    breakpoints: {\n        xs: string;\n        sm: string;\n        md: string;\n        lg: string;\n        xl: string;\n    };\n    widths: {\n        md: string;\n        lg: string;\n        xl: string;\n    };\n    heights: {\n        header: string;\n    };\n}\n\nexport default styled as CreateStyled<Theme>;\n","import * as React from 'react';\nimport styled from '../../utils/styled';\n\ninterface RootProps {\n    className?: string;\n}\n\nconst Root: React.FC<RootProps> = ({ children }) => <Wrapper>{children}</Wrapper>;\n\nexport default Root;\n\nconst Wrapper = styled('div')`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    min-height: 100vh;\n    background-color: ${props => props.theme.colors.background};\n    color: ${props => props.theme.colors.body};\n    font-family: ${props => props.theme.fonts.body};\n`;\n","import {keyframes} from \"@emotion/core\";\n\n\n\nexport const EaseIn = keyframes`\n  0% {\n  display: none;\n  opacity: 0 ;\n  } 100% {\n    opacity: 1;\n  } \n`;\n\nexport const EaseOut = keyframes`\n  0% {\n  opacity: 1;\n  } 80% {\n    display: block;\n    opacity: 0;\n  }100% {\n    display: none;\n    opacity: 0;\n  } \n`;\n\n","import styled from '../../utils/styled';\nimport {EaseIn} from \"../animations/transitions\";\n\n\n\n\nconst Container = styled('div')`\n    margin-left: 0;\n    width: 100%;\n    max-width: ${props => props.theme.widths.md};\n\n    @media (min-width: ${props => props.theme.breakpoints.lg}) {\n        max-width: ${props => props.theme.widths.lg};\n    }\n\n    @media (min-width: ${props => props.theme.breakpoints.xl}) {\n        max-width: ${props => props.theme.widths.xl};\n    }\n    -webkit-animation: ${EaseIn} .4s;\n`;\n\nexport default Container;\n","import * as React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport styled from '../../utils/styled';\nimport Container from \"./Container\";\n\ninterface HeaderProps {\n    title: string;\n}\n\nconst Wrapper = styled('header')`\n    \n    width: 100%;\n    padding: 0.5rem 1.5rem;\n    background-color: ${props => props.theme.colors.brand};\n    color: ${props => props.theme.colors.white};\n    font-family: ${props => props.theme.fonts.headings};\n    position: fixed;\n    z-index: 100;\n`;\n\nconst HeaderInner = styled(Container)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    @media (min-width: ${props => props.theme.breakpoints.lg}) {\n        flex-direction: row;\n    }\n`;\n\nconst HeaderTitle = styled('div')`\n    margin-left: 0;\n`;\n\nconst HeaderNav = styled('nav')`\n    flex: 1 1 auto;\n    margin: 1rem 0 1rem 2rem;\n    @media (min-width: ${props => props.theme.breakpoints.lg}) {\n        margin: 0;\n    }\n`;\n\nconst HeaderNavLink = styled(NavLink)`\n    margin: 0 1rem;\n\n    &.is-active {\n        text-decoration: underline;\n    }\n`;\n\n// const HeaderRight = styled('div')`\n//     padding-left: 1rem;\n// `;\n\nconst Title = styled('h2')`\n    margin: 0;\n    font-weight: 500;\n`;\n\n// const CurrentTheme = styled('span')`\n//     margin-right: 1rem;\n// `;\n//\n// const ThemeSwitcherButton = styled('button')`\n//     display: inline-block;\n//     padding: 0.25rem 0.5rem;\n//     border: 1px solid ${props => props.theme.colors.white};\n//     border-radius: 3px;\n//     background-color: ${props => props.theme.colors.white};\n//     color: ${props => props.theme.colors.brand};\n//     font-size: 0.8rem;\n//     text-transform: uppercase;\n//     letter-spacing: 1px;\n//     cursor: pointer;\n//     transition: all 0.3s ease;\n//\n//     &:hover,\n//     &:focus {\n//         background-color: transparent;\n//         color: ${props => props.theme.colors.white};\n//     }\n// `;\n\nconst Header: React.FC<HeaderProps> = ({ title }) => (\n    <Wrapper>\n        <HeaderInner>\n            <HeaderTitle>\n                <Title>{title}</Title>\n            </HeaderTitle>\n            <HeaderNav>\n                <HeaderNavLink exact to=\"/\" activeClassName=\"is-active\">\n                    Home\n                </HeaderNavLink>\n                <HeaderNavLink to=\"/members\" activeClassName=\"is-active\">\n                    Members\n                </HeaderNavLink>\n            </HeaderNav>\n        </HeaderInner>\n    </Wrapper>\n);\n\nexport default Header;\n","import styled from '../../utils/styled';\n\nconst Page = styled('div')`\n    margin-top: 3rem;\n    display: flex;\n    flex-direction: row;\n    flex: 1 1 auto;\n    padding: ${props => props.theme.containerPadding};\n    padding-bottom: 3rem;\n`;\n\nexport default Page;\n","import * as React from 'react'\nimport Page from '../components/layout/Page'\nimport Container from '../components/layout/Container'\nimport styled from '../utils/styled'\n\nfunction IndexPage() {\n  return (\n    <Page>\n      <Container>\n        <PageContent>\n          <h1>Welcome to Turbine!</h1>\n        </PageContent>\n      </Container>\n    </Page>\n  )\n}\n\nexport default IndexPage\n\nconst PageContent = styled('article')`\n  max-width: ${props => props.theme.widths.md};\n  margin: 0 auto;\n  line-height: 1.6;\n\n  a {\n    color: ${props => props.theme.colors.brand};\n  }\n\n  h1,\n  h2,\n  h3,\n  h4 {\n    margin-bottom: 0.5rem;\n    font-family: ${props => props.theme.fonts.headings};\n    line-height: 1.25;\n  }\n`\n","import * as React from 'react';\nimport styled from '../../utils/styled';\nimport {EaseIn} from \"../animations/transitions\";\n\ninterface DataTableProps {\n    columns: string[];\n    widths?: string[];\n}\n\nconst DataTable: React.FC<DataTableProps> = ({ children, widths, columns }) => (\n    <Wrapper>\n        <thead>\n            <tr>\n                {columns.map((column, i) => (\n                    <th key={column} style={widths && widths[i] ? { width: widths[i] } : undefined}>\n                        {column}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n        <tbody>{children}</tbody>\n    </Wrapper>\n);\n\nexport default DataTable;\n\nconst Wrapper = styled('table')`\n    margin-bottom: 0;\n    box-shadow: 2px 0px 25px 0px rgba(0,0,0,0.34);\n    border-top: 1px solid ${props => props.theme.colors.borders};\n    border-bottom: 1px solid ${props => props.theme.colors.borders};\n\n    thead {\n\n        tr {\n\n            th {\n                width: 100%;\n                padding: 1rem;\n                text-align: left;\n                border-bottom: 2px solid ${props => props.theme.colors.borders};\n            }\n        }\n    }\n\n    tbody {\n        tr {\n            border-top: 1px solid ${props => props.theme.colors.borders};\n\n            &:nth-of-type(even) {\n                background: ${props => props.theme.colors.tableOdd};\n            }\n\n            td {\n                padding: 0.5rem 1rem;\n                font-size: 0.85rem;\n            }\n        }\n    }\n    -webkit-animation: ${EaseIn} .4s;\n`;\n","import * as React from 'react';\nimport styled from '../../utils/styled';\n\nconst LoadingSpinner: React.FC = () => (\n        <Container>\n            <Loader xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 340 340\">\n                <circle cx=\"170\" cy=\"170\" r=\"160\" stroke=\"#5288AA\"/>\n                <circle cx=\"170\" cy=\"170\" r=\"135\" stroke=\"#ffffff\"/>\n                <circle cx=\"170\" cy=\"170\" r=\"110\" stroke=\"#5288AA\"/>\n                <circle cx=\"170\" cy=\"170\" r=\"85\" stroke=\"#ffffff\"/>\n            </Loader>\n        </Container>\n);\n\nexport default LoadingSpinner;\n\nconst Container = styled('div')`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 100vh;\n    background-color: ${props => props.theme.colors.background};\n`;\n\nconst Loader = styled('svg')`\n    max-width: 15rem;\n    width: 100%;\n    height: auto;\n    stroke-linecap: round;\n`;\n\n\n\n\n\n","// This file holds our state type, as well as any other types related to this Redux store.\n\n// Response object for GET /members\n\nexport interface Member extends ApiResponse {\n    id: string;\n    full_name: string;\n    grade: string;\n    assigned_pas: string;\n    dafsc: string;\n    office_symbol: string;\n    duty_title: string;\n    duty_start_date: string;\n    duty_phone: string;\n    awardec_status: string;\n    epr_opr_status: string;\n}\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\nexport type ApiResponse = Record<string, any>;\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum MembersActionTypes {\n    FETCH_REQUEST = '@@members/FETCH_REQUEST',\n    FETCH_SUCCESS = '@@members/FETCH_SUCCESS',\n    FETCH_ERROR = '@@members/FETCH_ERROR',\n    SELECT_MEMBER = '@@members/SELECT_MEMBER',\n    SELECTED = '@@members/SELECTED',\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface MembersState {\n    readonly loading: boolean;\n    readonly data: Member[];\n    readonly errors?: string;\n}\n","import { action } from 'typesafe-actions';\nimport { MembersActionTypes, Member } from './types';\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const fetchRequest = () => action(MembersActionTypes.FETCH_REQUEST);\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const fetchSuccess = (data: Member[]) => action(MembersActionTypes.FETCH_SUCCESS, data);\nexport const fetchError = (message: string) => action(MembersActionTypes.FETCH_ERROR, message);\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport styled from '../../utils/styled';\nimport Page from '../../components/layout/Page';\nimport Container from '../../components/layout/Container';\nimport DataTable from '../../components/layout/DataTable';\nimport LoadingSpinner from '../../components/data/LoadingSpinner';\n\nimport { ApplicationState } from '../../store';\nimport { Member } from '../../store/members/types';\nimport { fetchRequest } from '../../store/members/actions';\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n    loading: boolean;\n    data: Member[];\n    errors?: string;\n}\n\n// We can use `typeof` here to map our dispatch types to the props, like so.\ninterface PropsFromDispatch {\n    fetchRequest: typeof fetchRequest;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch;\n\nclass MembersIndexPage extends React.Component<AllProps> {\n    public componentDidMount() {\n        const { fetchRequest: fr } = this.props;\n        fr();\n    }\n\n    private renderData() {\n        const { loading, data } = this.props;\n        return (\n            <DataTable\n                columns={['Member Name', 'Grade', 'DAFSC', 'Office']}\n                widths={['auto', 'auto', 'auto', 'auto']}\n            >\n                {loading && data.length === 0 && (\n                    <MemberLoading>\n                        <td colSpan={3}>Loading...</td>\n                    </MemberLoading>\n                )}\n                {data.map(member => (\n                    <tr key={member.id}>\n                        <MemberDetail>\n                            <MemberName>\n                                <Link to={`/members/${member.id + member.full_name}`}>{member.full_name}</Link>\n                            </MemberName>\n                        </MemberDetail>\n                        <td>{member.grade}</td>\n                        <td>{member.dafsc}</td>\n                        <td>{member.office_symbol}</td>\n                    </tr>\n                ))}\n            </DataTable>\n        );\n    }\n\n    public render() {\n        const { loading } = this.props;\n\n        return (\n            <Page>\n                <Container>\n                    <TableWrapper>\n                        {loading && (\n                                    <LoadingSpinner />\n                        )}\n                        {this.renderData()}\n                    </TableWrapper>\n                </Container>\n            </Page>\n        );\n    }\n}\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ members }: ApplicationState) => ({\n    loading: members.loading,\n    errors: members.errors,\n    data: members.data,\n});\n\n// mapDispatchToProps is especially useful for constraining our actions to the connected component.\n// You can access these via `this.props`.\nconst mapDispatchToProps = {\n    fetchRequest,\n};\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(MembersIndexPage);\n\nconst TableWrapper = styled('div')`\n    position: relative;\n    max-width: ${props => props.theme.widths.md};\n    margin: 0 auto;\n    min-height: 200px;\n`;\n\nconst MemberDetail = styled('td')`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`;\n\n// const MemberIcon = styled('img')`\n//   width: 32px;\n//   height: 32px;\n// `\n\nconst MemberName = styled('div')`\n    flex: 1 1 auto;\n    height: 100%;\n    margin-left: 1rem;\n\n    a {\n        color: ${props => props.theme.colors.brand};\n    }\n`;\n\nconst MemberLoading = styled('tr')`\n    td {\n        height: 48px;\n        text-align: center;\n    }\n`;\n","import { darken } from 'polished';\n\nimport styled from '../../utils/styled';\nimport {EaseIn} from \"../animations/transitions\";\n\n\nexport const MemberInfobox = styled('div')`\n    position: relative;\n    background: rgba(0, 0, 0, 0.9);\n    overflow: hidden;\n    border-radius: 8px;\n    color: ${props => darken(0.25, props.theme.colors.white)};\n    -webkit-animation: ${EaseIn} .4s;\n`;\n\nexport const MemberInfoboxBlurBackground = styled('img')`\n    position: absolute;\n    top: -12.5%;\n    left: -12.5%;\n    width: 125%;\n    height: 125%;\n    filter: blur(25px);\n    object-fit: cover;\n    opacity: 0.35;\n    background-repeat: no-repeat;\n    z-index: 1;\n`;\n\nexport const MemberInfoboxInner = styled('div')`\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    padding: 3rem;\n    box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 125px inset;\n    z-index: 2;\n-webkit-animation: ${EaseIn} .4s;\n    @media (min-width: ${props => props.theme.breakpoints.lg}) {\n        flex-direction: row;\n    }\n`;\n\nexport const MemberInfoboxImage = styled('img')`\n    display: block;\n    flex-shrink: 0;\n    width: 180px;\n    height: 128px;\n    box-shadow: rgba(0, 0, 0, 0.3) 0px 12px 32px;\n    object-fit: cover;\n    border-radius: 16px;\n    border-width: 1px;\n    border-style: solid;\n    border-color: rgba(0, 0, 0, 0.3);\n    border-image: initial;\n`;\n\nexport const MemberInfoboxHeading = styled('div')`\n    flex: 1 1 100%;\n    margin: 1.5rem 0 0;\n    text-align: center;\n\n    @media (min-width: ${props => props.theme.breakpoints.lg}) {\n        margin: 0 1.5rem;\n        text-align: left;\n    }\n`;\n\nexport const MemberName = styled('h1')`\n    margin: 0;\n    color: ${props => props.theme.colors.white};\n    font-weight: 500;\n`;\n\nexport const MemberRoles = styled('p')`\n    margin: 0.5rem 0 0;\n    color: ${props => props.theme.colors.white};\n    font-size: 0.8rem;\n    letter-spacing: 1px;\n    text-transform: uppercase;\n\n    & span {\n        color: ${props => darken(0.25, props.theme.colors.white)};\n    }\n`;\n","import styled from '../../utils/styled';\n\nexport const MemberStats = styled('div')`\n    display: block;\n    max-width: 340px;\n    margin: 1.5rem 0 0;\n    background: rgba(0, 0, 0, 0.45);\n    border-radius: 8px;\n    padding: 12px;\n\n    @media (min-width: ${props => props.theme.breakpoints.lg}) {\n        margin: 0;\n        flex: 1 0 340px;\n    }\n`;\n\nexport const MemberStatsInner = styled('div')`\n    display: flex;\n`;\n\nexport interface StatAttributeProps {\n    attr: 'str' | 'agi' | 'int';\n    isPrimaryAttr?: boolean;\n}\n\nexport const StatAttribute = styled('div')<StatAttributeProps>`\n    display: flex;\n    align-items: center;\n    flex: 1 1 0;\n    padding: 0 1rem;\n    font-size: 0.8rem;\n`;\n\nexport interface BulletProps {\n    attr: 'str' | 'agi' | 'int';\n}\n\nexport const Bullet = styled('div')<BulletProps>`\n    flex-shrink: 0;\n    height: 0.5rem;\n    width: 0.5rem;\n    margin-right: 8px;\n    border-radius: 50%;\n`;\n","import { transparentize } from 'polished';\nimport styled from '../../utils/styled';\nimport {EaseIn} from \"../animations/transitions\";\n\nexport const MemberDetailsAttrName = styled('span')`\n    color: ${props => transparentize(0.25, props.theme.colors.body)};\n    flex-grow: 1;\n    font-size: 12px;\n    margin-right: 5px;\n    text-transform: uppercase;\n`;\n\nexport const MemberDetailsRow = styled('span')`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 8px;\n    color: ${props => props.theme.colors.body};\n    border-top: 1px solid ${props => props.theme.colors.borders};\n\n    &:nth-of-type(even) {\n        background: ${props => props.theme.colors.tableOdd};\n    }\n\n    &:last-of-type {\n        border-bottom: 1px solid ${props => props.theme.colors.borders};\n    }\n`;\n\nexport const MemberDetailsColumn = styled('div')`\n    display: flex;\n    flex-direction: column;\n    flex: 1 1 0px;\n    padding: 8px;\n`;\n\nexport const MemberDetails = styled('div')`\n    display: flex;\n    margin-top: 10px;\n    margin-left: -8px;\n    margin-right: -8px;\n    -webkit-animation: ${EaseIn} .5s;\n`;\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router';\n\nimport {\n    MemberInfobox,\n    // MemberInfoboxImage,\n    MemberInfoboxHeading,\n    MemberInfoboxInner,\n    // MemberInfoboxBlurBackground,\n    MemberName,\n    // MemberRoles,\n} from '../../components/members/MemberInfobox';\nimport {\n    MemberStats,\n    MemberStatsInner,\n    // StatAttribute,\n    // Bullet\n} from '../../components/members/MemberStats';\nimport {\n    MemberDetails,\n    MemberDetailsColumn,\n    MemberDetailsRow,\n    MemberDetailsAttrName,\n} from '../../components/members/MemberDetails';\nimport Page from '../../components/layout/Page';\nimport Container from '../../components/layout/Container';\n\nimport { ApplicationState } from '../../store';\nimport { Member } from '../../store/members/types';\nimport { fetchRequest } from '../../store/members/actions';\nimport styled from '../../utils/styled';\nimport LoadingSpinner from '../../components/data/LoadingSpinner';\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n    loading: boolean;\n    data: Member[];\n    errors?: string;\n}\n\n// We can use `typeof` here to map our dispatch types to the props, like so.\ninterface PropsFromDispatch {\n    fetchMembers: typeof fetchRequest;\n}\n\ninterface RouteParams {\n    memberId: string;\n}\n\ninterface State {\n    selected?: Member;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch & RouteComponentProps<RouteParams>;\n\n// const API_ENDPOINT = process.env.REACT_APP_API_ENDPOINT || 'https://api.opendota.com';\n\nconst Wrapper = styled('div')`\n    position: relative;\n`;\n\nclass ShowMembersPage extends React.Component<AllProps, State> {\n    constructor(props: AllProps) {\n        super(props);\n\n        this.state = {};\n    }\n\n    public componentDidMount() {\n        const { data, fetchMembers } = this.props;\n\n        if (!data || data.length === 0) {\n            fetchMembers();\n        }\n    }\n\n    public render() {\n        const { data, loading, match } = this.props;\n        const selected = data.find(member => ((member.id + member.full_name) === match.params.memberId));\n\n        return (\n            <Page>\n                <Container>\n                    <Wrapper>\n                        {loading && (\n                                    <LoadingSpinner />\n                        )}\n                        {selected && (\n                            <>\n                                <MemberInfobox>\n                                    <MemberInfoboxInner>\n                                        <MemberInfoboxHeading>\n                                            <MemberName>{selected.full_name}</MemberName>\n                                        </MemberInfoboxHeading>\n                                        <MemberStats>\n                                            <MemberStatsInner>\n                                                <MemberDetailsRow>{selected.dafsc}</MemberDetailsRow>\n                                            </MemberStatsInner>\n                                        </MemberStats>\n                                    </MemberInfoboxInner>\n                                </MemberInfobox>\n                                <MemberDetails>\n                                    <MemberDetailsColumn>\n                                        <MemberDetailsRow>\n                                            <MemberDetailsAttrName>DUTY TITLE:</MemberDetailsAttrName> {selected.duty_title}\n                                        </MemberDetailsRow>\n                                        <MemberDetailsRow>\n                                            <MemberDetailsAttrName>Grade:</MemberDetailsAttrName> {selected.grade}\n                                        </MemberDetailsRow>\n                                    </MemberDetailsColumn>\n                                    <MemberDetailsColumn>\n                                        <MemberDetailsRow>\n                                            <MemberDetailsAttrName>Office Symbol:</MemberDetailsAttrName>{' '}\n                                            {selected.office_symbol}\n                                        </MemberDetailsRow>\n                                    </MemberDetailsColumn>\n                                </MemberDetails>\n                            </>\n                        )}\n                    </Wrapper>\n                </Container>\n            </Page>\n        );\n    }\n}\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ members }: ApplicationState) => ({\n    loading: members.loading,\n    errors: members.errors,\n    data: members.data,\n});\n\n// mapDispatchToProps is especially useful for constraining our actions to the connected component.\n// You can access these via `this.props`.\nconst mapDispatchToProps = {\n    fetchMembers: fetchRequest,\n};\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(ShowMembersPage);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps, Route, Switch } from 'react-router-dom';\n\nimport MembersIndexPage from './members/index';\nimport ShowMembersPage from './members/show';\n\nimport { ApplicationState } from '../store';\nimport { Member } from '../store/members/types';\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n    loading: boolean;\n    data: Member[];\n    errors?: string;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & RouteComponentProps;\n\nconst MembersPage: React.FC<AllProps> = ({ match }) => {\n    return (\n        <Switch>\n            <Route exact path={`${match.path}/`} component={MembersIndexPage} />\n            <Route path={`${match.path}/:memberId`} component={ShowMembersPage} />\n        </Switch>\n    );\n};\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ members }: ApplicationState) => ({\n    loading: members.loading,\n    errors: members.errors,\n    data: members.data,\n});\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(mapStateToProps)(MembersPage);\n","import { css } from '@emotion/core';\n\nconst normalize = css`\n    /*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n    /* Document\n    ========================================================================== */\n\n    /**\n  * Use a better box model (opinionated).\n  */\n\n    html {\n        box-sizing: border-box;\n    }\n\n    *,\n    *::before,\n    *::after {\n        box-sizing: inherit;\n    }\n\n    /**\n  * Use a more readable tab size (opinionated).\n  */\n\n    :root {\n        -moz-tab-size: 4;\n        tab-size: 4;\n    }\n\n    /**\n  * Correct the line height in all browsers.\n  */\n\n    html {\n        line-height: 1.15;\n    }\n\n    /* Sections\n    ========================================================================== */\n\n    /**\n  * Remove the margin in all browsers.\n  */\n\n    body {\n        margin: 0;\n    }\n\n    /**\n  * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  */\n\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif,\n            'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n    }\n\n    /**\n  * Correct the font size and margin on \\`h1\\` elements within \\`section\\` and\n  * \\`article\\` contexts in Chrome, Firefox, and Safari.\n  */\n\n    h1 {\n        font-size: 2em;\n        margin: 0.67em 0;\n    }\n\n    /* Grouping content\n    ========================================================================== */\n\n    /**\n  * Add the correct height in Firefox.\n  */\n\n    hr {\n        height: 0;\n    }\n\n    /* Text-level semantics\n    ========================================================================== */\n\n    /**\n  * Add the correct text decoration in Chrome, Edge, and Safari.\n  */\n\n    abbr[title] {\n        text-decoration: underline dotted;\n    }\n\n    /**\n  * Add the correct font weight in Chrome, Edge, and Safari.\n  */\n\n    b,\n    strong {\n        font-weight: bolder;\n    }\n\n    /**\n  * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  * 2. Correct the odd \\`em\\` font sizing in all browsers.\n  */\n\n    code,\n    kbd,\n    samp,\n    pre {\n        font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; /* 1 */\n        font-size: 1em; /* 2 */\n    }\n\n    /**\n  * Add the correct font size in all browsers.\n  */\n\n    small {\n        font-size: 80%;\n    }\n\n    /**\n  * Prevent \\`sub\\` and \\`sup\\` elements from affecting the line height in\n  * all browsers.\n  */\n\n    sub,\n    sup {\n        font-size: 75%;\n        line-height: 0;\n        position: relative;\n        vertical-align: baseline;\n    }\n\n    sub {\n        bottom: -0.25em;\n    }\n\n    sup {\n        top: -0.5em;\n    }\n\n    /* Forms\n    ========================================================================== */\n\n    /**\n  * 1. Change the font styles in all browsers.\n  * 2. Remove the margin in Firefox and Safari.\n  */\n\n    button,\n    input,\n    optgroup,\n    select,\n    textarea {\n        font-family: inherit; /* 1 */\n        font-size: 100%; /* 1 */\n        line-height: 1.15; /* 1 */\n        margin: 0; /* 2 */\n    }\n\n    /**\n  * Remove the inheritance of text transform in Edge and Firefox.\n  * 1. Remove the inheritance of text transform in Firefox.\n  */\n\n    button,\n    select {\n        /* 1 */\n        text-transform: none;\n    }\n\n    /**\n  * Correct the inability to style clickable types in iOS and Safari.\n  */\n\n    button,\n    [type='button'],\n    [type='reset'],\n    [type='submit'] {\n        -webkit-appearance: button;\n    }\n\n    /**\n  * Remove the inner border and padding in Firefox.\n  */\n\n    button::-moz-focus-inner,\n    [type='button']::-moz-focus-inner,\n    [type='reset']::-moz-focus-inner,\n    [type='submit']::-moz-focus-inner {\n        border-style: none;\n        padding: 0;\n    }\n\n    /**\n  * Restore the focus styles unset by the previous rule.\n  */\n\n    button:-moz-focusring,\n    [type='button']:-moz-focusring,\n    [type='reset']:-moz-focusring,\n    [type='submit']:-moz-focusring {\n        outline: 1px dotted ButtonText;\n    }\n\n    /**\n  * Correct the padding in Firefox.\n  */\n\n    fieldset {\n        padding: 0.35em 0.75em 0.625em;\n    }\n\n    /**\n  * Remove the padding so developers are not caught out when they zero out\n  *    \\`fieldset\\` elements in all browsers.\n  */\n\n    legend {\n        padding: 0;\n    }\n\n    /**\n  * Add the correct vertical alignment in Chrome and Firefox.\n  */\n\n    progress {\n        vertical-align: baseline;\n    }\n\n    /**\n  * Correct the cursor style of increment and decrement buttons in Chrome.\n  */\n\n    [type='number']::-webkit-inner-spin-button,\n    [type='number']::-webkit-outer-spin-button {\n        height: auto;\n    }\n\n    /**\n  * 1. Correct the odd appearance in Chrome and Safari.\n  * 2. Correct the outline style in Safari.\n  */\n\n    [type='search'] {\n        -webkit-appearance: textfield; /* 1 */\n        outline-offset: -2px; /* 2 */\n    }\n\n    /**\n  * Remove the inner padding in Chrome and Safari on macOS.\n  */\n\n    [type='search']::-webkit-search-decoration {\n        -webkit-appearance: none;\n    }\n\n    /**\n  * 1. Correct the inability to style clickable types in iOS and Safari.\n  * 2. Change font properties to \\`inherit\\` in Safari.\n  */\n\n    ::-webkit-file-upload-button {\n        -webkit-appearance: button; /* 1 */\n        font: inherit; /* 2 */\n    }\n\n    /* Interactive\n    ========================================================================== */\n\n    /*\n  * Add the correct display in Edge and Firefox.\n  */\n\n    details {\n        display: block;\n    }\n\n    /*\n  * Add the correct display in all browsers.\n  */\n\n    summary {\n        display: list-item;\n    }\n`;\n\nexport default normalize;\n","import { css } from '@emotion/core';\n\nconst globals = css`\n    body {\n        width: 100%;\n        overflow-x: hidden;\n        overflow-y: scroll;\n    }\n\n    a {\n        color: inherit;\n        text-decoration: none;\n\n        &:hover,\n        &:focus {\n            text-decoration: underline;\n        }\n    }\n\n    img {\n        max-width: 100%;\n        position: relative;\n        vertical-align: middle;\n    }\n\n    figure {\n        margin: 2rem 0;\n    }\n\n    figcaption {\n        font-size: 80%;\n    }\n\n    table {\n        width: 100%;\n        font-size: 85%;\n        border-collapse: collapse;\n    }\n`;\n\nexport default globals;\n","// Example for using discriminated union types.\nexport type ThemeColors = 'light' | 'dark';\n\n// Use enums for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum LayoutActionTypes {\n    SET_THEME = '@@layout/SET_THEME',\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface LayoutState {\n    readonly theme: ThemeColors;\n}\n","import * as React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { Global } from '@emotion/core'\n\nimport Root from './components/layout/Root'\nimport Header from './components/layout/Header'\nimport IndexPage from './pages/index'\nimport MembersPage from './pages/members'\nimport normalize from './styles/normalize'\nimport globals from './styles/globals'\n\n// If your app is big + you have routes with a lot of components, you should consider\n// code-splitting your routes! If you bundle stuff up with Webpack, I recommend `react-loadable`.\n//\n// $ yarn add react-loadable\n// $ yarn add --dev @types/react-loadable\n//\n// The given `pages/` directory provides an example of a directory structure that's easily\n// code-splittable.\n\nconst Routes: React.FC = () => (\n    <Root>\n        <Global styles={normalize} />\n        <Global styles={globals} />\n        <Header title=\"Turbine\" />\n        <Switch>\n            <Route exact path=\"/\" component={IndexPage} />\n            <Route path=\"/members\" component={MembersPage} />\n            <Route component={() => <div>Not Found</div>} />\n        </Switch>\n    </Root>\n)\n\nexport default Routes","import { action } from 'typesafe-actions';\n\nimport { LayoutActionTypes, ThemeColors } from './types';\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\n//\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\n\nexport const setTheme = (theme: ThemeColors) => action(LayoutActionTypes.SET_THEME, theme);\n","import * as React from 'react';\nimport { ReactReduxContext } from 'react-redux';\n\nimport { ApplicationState } from '../store';\nimport { ThemeColors } from '../store/layout';\nimport * as layoutActions from '../store/layout/actions';\n\n// Now here is an example of creating container components.\n//\n// Before React v16 I would've suggested against implementing container components that are\n// separate from their connected view logic, since they intrude at the very definition of a view,\n// but now with newer patterns (e.g. render props), it makes sense to use them once again.\n//\n// See how this works at `./src/components/Header`\n\n// Redux-specific props.\ninterface LayoutContainerProps {\n    theme: ThemeColors;\n    setTheme: (theme: ThemeColors) => void;\n}\n\n// Wrapper props for render/children callback.\ninterface LayoutContainerRenderProps {\n    render?: (props: LayoutContainerProps) => React.ReactNode;\n    children?: (props: LayoutContainerProps) => React.ReactNode;\n}\n\nconst LayoutContainer: React.FC<LayoutContainerRenderProps> = ({ render, children }) => {\n    // Here we do a bit of a hack. Since the latest react-redux typings broke the\n    // \"children-props-as-redux-container\" approach on the previous version of this guide,\n    // we use the newly-introduced `ReactReduxContext` consumer to get our state, and map the\n    // `theme` state and the `setTheme` action call inside it.\n    return (\n        <ReactReduxContext.Consumer>\n            {({ store }) => {\n                // Use the standard `store.getState()` redux function to get the root state, and cast\n                // it with our ApplicationState type.\n                const state: ApplicationState = store.getState();\n\n                // Obtain the `theme` state and the `setTheme` action.\n                // Note that per Redux conventions actions MUST be wrapped inside `store.dispatch()`\n                const { theme } = state.layout;\n                const setTheme = (tc: ThemeColors) => store.dispatch(layoutActions.setTheme(tc));\n\n                // Create a render/children props wrapper with the above variables set as a callback.\n                if (render) {\n                    return render({ theme, setTheme });\n                }\n\n                if (children) {\n                    return children({ theme, setTheme });\n                }\n\n                return null;\n            }}\n        </ReactReduxContext.Consumer>\n    );\n};\n\nexport default LayoutContainer;\n","const brandColors = {\n    black: '#000000',\n    gray75: '#2e2e2c',\n    gray60: '#666666',\n    gray50: '#7f7f7f',\n    gray40: '#999999',\n    gray30: '#b2b2b2',\n    gray20: '#cccccc',\n    gray10: '#e5e5e5',\n    gray5: '#ebebea',\n    white: '#fefefe',\n    yellow: '#f3df49',\n    red: '#eb5558',\n    green: '#9ee79a',\n    steelteal: '#5288AA'\n};\n\nexport default brandColors;\n","import { lighten } from 'polished';\nimport { Theme } from '../../utils/styled';\nimport brandColors from '../colors/brandColors';\n\nconst lightTheme: Theme = {\n    colors: {\n        background: brandColors.gray75,\n        body: brandColors.gray10,\n        headings: brandColors.gray5,\n        black: brandColors.black,\n        white: brandColors.white,\n        borders: lighten(0.05, brandColors.gray75),\n        tableOdd: lighten(0.025, brandColors.gray75),\n        brand: brandColors.steelteal,\n    },\n    fonts: {\n        headings:\n            // eslint-disable-next-line max-len\n            \"'IBM Plex Sans', -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif\",\n        body:\n            // eslint-disable-next-line max-len\n            '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif',\n        monospace: \"'IBM Plex Mono', Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace, monospace\",\n    },\n    fontSizes: {\n        h1: '2.441rem',\n        h2: '1.953rem',\n        h3: '1.563rem',\n        h4: '1.25rem',\n    },\n    containerPadding: '1.5rem',\n    breakpoints: {\n        xs: '0px',\n        sm: '576px',\n        md: '768px',\n        lg: '992px',\n        xl: '1200px',\n    },\n    widths: {\n        md: '720px',\n        lg: '960px',\n        xl: '1140px',\n    },\n    heights: {\n        header: '60px',\n    },\n};\n\nexport default lightTheme;\n","import { darken } from 'polished';\nimport { Theme } from '../../utils/styled';\nimport brandColors from '../colors/brandColors';\n\nconst lightTheme: Theme = {\n    colors: {\n        background: brandColors.gray5,\n        body: brandColors.gray75,\n        headings: brandColors.black,\n        black: brandColors.black,\n        white: brandColors.white,\n        borders: darken(0.05, brandColors.gray5),\n        tableOdd: darken(0.025, brandColors.gray5),\n        brand: brandColors.red\n    },\n    fonts: {\n        headings:\n            // eslint-disable-next-line max-len\n            \"'IBM Plex Sans', -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell,  Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif\",\n        body:\n            // eslint-disable-next-line max-len\n            '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, Arial, sans-serif',\n        monospace: \"'IBM Plex Mono', Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace, monospace\",\n    },\n    fontSizes: {\n        h1: '2.441rem',\n        h2: '1.953rem',\n        h3: '1.563rem',\n        h4: '1.25rem',\n    },\n    containerPadding: '1.5rem',\n    breakpoints: {\n        xs: '0px',\n        sm: '576px',\n        md: '768px',\n        lg: '992px',\n        xl: '1200px',\n    },\n    widths: {\n        md: '720px',\n        lg: '960px',\n        xl: '1140px',\n    },\n    heights: {\n        header: '60px',\n    },\n};\n\nexport default lightTheme;\n","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Store } from 'redux';\nimport { History } from 'history';\nimport { ThemeProvider } from 'emotion-theming';\n\nimport Routes from './routes';\nimport { ApplicationState } from './store';\nimport LayoutContainer from './containers/LayoutContainer';\nimport * as themes from './styles/theme';\n\n// Any additional component props go here.\ninterface MainProps {\n    store: Store<ApplicationState>;\n    history: History;\n}\n\n// Create an intersection type of the component props and our Redux props.\nconst Main: React.FC<MainProps> = ({ store, history }) => {\n    return (\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <LayoutContainer>\n                    {({ theme }) => (\n                        <ThemeProvider theme={themes[theme]}>\n                            <Routes />\n                        </ThemeProvider>\n                    )}\n                </LayoutContainer>\n            </ConnectedRouter>\n        </Provider>\n    );\n};\n\n// Normally you wouldn't need any generics here (since types infer from the passed functions).\n// But since we pass some props from the `index.js` file, we have to include them.\n// For an example of a `connect` function without generics, see `./containers/LayoutContainer`.\nexport default Main;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Reducer } from 'redux';\nimport { LayoutState, LayoutActionTypes } from './types';\n\n// Type-safe initialState!\nexport const initialState: LayoutState = {\n    theme: 'dark',\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<LayoutState> = (state = initialState, action) => {\n    switch (action.type) {\n        case LayoutActionTypes.SET_THEME: {\n            return { ...state, theme: action.payload };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as layoutReducer };\n","export async function callApi(method: string, url: string, path: string, data?: any) {\n    const res = await fetch(`${url}/${path}`, {\n        method,\n        headers: {\n            Accept: 'application/json'\n        },\n        body: JSON.stringify(data),\n    });\n    return res.json();\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { MembersActionTypes } from './types';\nimport { fetchError, fetchSuccess } from './actions';\nimport { callApi } from '../../utils/api';\n\nconst API_ENDPOINT = 'http://localhost:8080';\n\nfunction *handleFetch() {\n    try {\n        // To call async functions, use redux-saga's `call()`.\n        const res = yield call(callApi, 'get', API_ENDPOINT, 'api/members');\n\n        if (res.error) {\n            yield put(fetchError(res.error));\n        } else {\n            yield put(fetchSuccess(res));\n        }\n    } catch (err) {\n        if (err instanceof Error && err.stack) {\n            yield put(fetchError(err.stack));\n        } else {\n            yield put(fetchError('An unknown error occured.'));\n        }\n    }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction *watchFetchRequest() {\n    yield takeEvery(MembersActionTypes.FETCH_REQUEST, handleFetch);\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction *membersSaga() {\n    yield all([fork(watchFetchRequest)]);\n}\n\nexport default membersSaga;\n","import { Reducer } from 'redux';\nimport { MembersState, MembersActionTypes } from './types';\n\n// Type-safe initialState!\nexport const initialState: MembersState = {\n    data: [],\n    errors: undefined,\n    loading: false,\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<MembersState> = (state = initialState, action) => {\n    switch (action.type) {\n        case MembersActionTypes.FETCH_REQUEST: {\n            return { ...state, loading: true };\n        }\n        case MembersActionTypes.FETCH_SUCCESS: {\n            return { ...state, loading: false, data: action.payload };\n        }\n        case MembersActionTypes.FETCH_ERROR: {\n            return { ...state, loading: false, errors: action.payload };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as membersReducer };\n","import { combineReducers } from 'redux';\nimport { all, fork } from 'redux-saga/effects';\nimport { connectRouter, RouterState } from 'connected-react-router';\nimport { History } from 'history';\n\nimport { LayoutState, layoutReducer } from './layout';\n\nimport membersSaga from './members/sagas';\nimport { membersReducer } from './members/reducer';\nimport { MembersState } from './members/types';\n\n// The top-level state object\nexport interface ApplicationState {\n    layout: LayoutState;\n    members: MembersState;\n    router: RouterState;\n}\n\n// Whenever an action is dispatched, Redux will update each top-level application state property\n// using the reducer with the matching name. It's important that the names match exactly, and that\n// the reducer acts on the corresponding ApplicationState property type.\nexport const createRootReducer = (history: History) =>\n    combineReducers({\n        layout: layoutReducer,\n        members: membersReducer,\n        router: connectRouter(history),\n    });\n\n// Here we use `redux-saga` to trigger actions asynchronously. `redux-saga` uses something called a\n// \"generator function\", which you can read about here:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*\nexport function* rootSaga() {\n    yield all([fork(membersSaga)]);\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { createBrowserHistory } from 'history';\nimport './index.scss';\n\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './configureStore';\n\nimport 'typeface-ibm-plex-sans';\n\n// We use hash history because this example is going to be hosted statically.\n// Normally you would use browser history.\nconst history = createBrowserHistory();\n\nconst initialState = window.INITIAL_REDUX_STATE;\nconst store = configureStore(history, initialState);\n\nReactDOM.render(<Main store={store} history={history} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Store, createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n// `react-router-redux` is deprecated, so we use `connected-react-router`.\n// This provides a Redux middleware which connects to our `react-router` instance.\nimport { routerMiddleware } from 'connected-react-router';\n// We'll be using Redux Devtools. We can use the `composeWithDevTools()`\n// directive so we can pass our middleware along with it\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// If you use react-router, don't forget to pass in your history type.\nimport { History } from 'history';\n\n// Import the state interface and our combined reducers/sagas.\nimport { ApplicationState, createRootReducer, rootSaga } from './store';\n\nexport default function configureStore(history: History, initialState: ApplicationState): Store<ApplicationState> {\n    // create the composing function for our middlewares\n    const composeEnhancers = composeWithDevTools({});\n    // create the redux-saga middleware\n    const sagaMiddleware = createSagaMiddleware();\n\n    // We'll create our store with the combined reducers/sagas, and the initial Redux state that\n    // we'll be passing from our entry point.\n    const store = createStore(\n        createRootReducer(history),\n        initialState,\n        composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware)),\n    );\n\n    // Don't forget to run the root saga, and return the store object.\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n"],"sourceRoot":""}