{"version":3,"sources":["components/layout/Root.tsx","components/layout/MiTable.tsx","components/data/LoadingSpinner.tsx","components/layout/leftNavBar/NavDrawer.tsx","pages/index.tsx","styles/normalize.ts","store/members/types.ts","store/members/actions.ts","components/layout/Page.tsx","components/layout/button/SpeedDialBtn.tsx","pages/members/index.tsx","routes.tsx","styles/theme/dark.ts","main.tsx","serviceWorker.ts","store/layout/types.ts","store/layout/reducer.ts","utils/api.ts","store/members/sagas.ts","store/members/reducer.ts","store/squadrons/types.ts","store/squadrons/actions.ts","store/squadrons/sagas.ts","store/squadrons/reducer.ts","store/flights/types.ts","store/flights/reducer.ts","store/AETs/types.ts","store/AETs/reducer.ts","store/flights/actions.ts","store/flights/sagas.ts","store/AETs/actions.ts","store/AETs/sagas.ts","store/index.ts","index.tsx","configureStore.ts"],"names":["Root","children","Wrapper","styled","desc","a","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","map","headCell","key","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","createStyles","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","variant","Tooltip","IconButton","aria-label","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","members","length","Paper","TableContainer","Table","aria-labelledby","size","target","newSelecteds","n","full_name","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","member","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","component","scope","grade","dafsc","office_symbol","style","colSpan","TablePagination","rowsPerPageOptions","value","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","LoadingSpinner","Container","Loader","xmlns","viewBox","cx","cy","r","stroke","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","mixins","content","Height","loadingSpinner","flexDirection","NavDrawer","useTheme","open","setOpen","CssBaseline","AppBar","edge","noWrap","Drawer","Divider","List","ListItem","button","ListItemIcon","ListItemText","loading","Box","Main","Page","MemberActionTypes","normalize","css","membersFetchSuccess","payload","action","FETCH_SUCCESS","membersFetchError","message","FETCH_ERROR","bottom","right","transform","flexGrow","pointerEvents","speedDial","actions","icon","name","SpeedDialBtn","hidden","handleClose","Backdrop","timeout","SpeedDial","ariaLabel","SpeedDialIcon","onClose","onOpen","SpeedDialAction","tooltipTitle","tooltipOpen","MembersIndexPage","fr","this","membersFetchRequest","mapDispatchToProps","FETCH_REQUEST","connect","errors","data","Routes","styles","exact","path","darktheme","createMuiTheme","blueGrey","store","history","ThemeProvider","Boolean","window","location","hostname","match","LayoutActionTypes","initialState","reducer","state","SET_THEME","callApi","method","fetch","headers","body","JSON","stringify","res","ok","json","handleFetch","watchFetchRequest","membersSaga","call","error","put","Error","stack","takeEvery","all","fork","SquadronActionTypes","undefined","console","log","squadronsFetchSuccess","squadronsFetchError","squadronPostSuccess","POST_SUCCESS","squadronSaga","postNewSquadron","FlightActionTypes","squadrons","newInput","showInput","posting","SHOW_INPUT","POST_REQUEST","AETActionTypes","flights","AETs","flightsFetchSuccess","flightsFetchError","flightSaga","AETsFetchSuccess","AETsFetchError","AETSaga","rootSaga","createRootReducer","combineReducers","layout","layoutReducer","squadronsReducer","flightsReducer","AETsReducer","membersReducer","router","connectRouter","createBrowserHistory","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","routerMiddleware","run","configureStore","INITIAL_REDUX_STATE","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6847b11.chunk.js","sourcesContent":["import * as React from 'react';\nimport styled from \"styled-components\";\n\ninterface RootProps {\n    className?: string;\n}\n\nconst Root: React.FC<RootProps> = ({ children }) => <Wrapper>{children}</Wrapper>;\n\nexport default Root;\n\nconst Wrapper = styled('div')`\n`;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, lighten, makeStyles, Theme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport MemberModel from \"../../store/members/MemberModel\";\n\n\ninterface Data {\n    full_name: number;\n    grade: number;\n    dafsc: number;\n    office_symbol: number;\n}\n\nfunction desc<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort<T>(array: T[], cmp: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getSorting<K extends keyof any>(\n    order: Order,\n    orderBy: K,\n): (a: { [key in K]: number | string }, b: { [key in K]: number | string }) => number {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\ninterface HeadCell {\n    disablePadding: boolean;\n    id: keyof Data;\n    label: string;\n    numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n    { id: 'full_name', numeric: false, disablePadding: true, label: 'Full Name' },\n    { id: 'grade', numeric: true, disablePadding: false, label: 'Rank' },\n    { id: 'dafsc', numeric: true, disablePadding: false, label: 'AFSC' },\n    { id: 'office_symbol', numeric: true, disablePadding: false, label: 'Office Symbol' },\n];\n\ninterface EnhancedTableProps {\n    classes: ReturnType<typeof useStyles>;\n    numSelected: number;\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\n    order: Order;\n    orderBy: string;\n    rowCount: number;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nconst useToolbarStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            paddingLeft: theme.spacing(2),\n            paddingRight: theme.spacing(1),\n        },\n        highlight:\n            theme.palette.type === 'light'\n                ? {\n                    color: theme.palette.secondary.main,\n                    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n                }\n                : {\n                    color: theme.palette.text.primary,\n                    backgroundColor: theme.palette.secondary.dark,\n                },\n        title: {\n            flex: '1 1 100%',\n        },\n    }),\n);\n\ninterface EnhancedTableToolbarProps {\n    numSelected: number;\n}\n\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\n    const classes = useToolbarStyles();\n    const { numSelected } = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n                    {numSelected} selected\n                </Typography>\n            ) : (\n                <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n                    Alpha Roster\n                </Typography>\n            )}\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                <Tooltip title=\"Filter list\">\n                    <IconButton aria-label=\"filter list\">\n                        <FilterListIcon />\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n};\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n        },\n        paper: {\n            width: '100%',\n            marginBottom: theme.spacing(2),\n        },\n        table: {\n            minWidth: 750,\n        },\n        visuallyHidden: {\n            border: 0,\n            clip: 'rect(0 0 0 0)',\n            height: 1,\n            margin: -1,\n            overflow: 'hidden',\n            padding: 0,\n            position: 'absolute',\n            top: 20,\n            width: 1,\n        },\n    }),\n);\n\ninterface Props {\n    members?: MemberModel[];\n}\n\nconst EnhancedTable: React.FC<Props> = props => {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState<Order>('asc');\n    const [orderBy, setOrderBy] = React.useState<keyof Data>('dafsc');\n    const [selected, setSelected] = React.useState<string[]>([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.checked) {\n            const newSelecteds = props.members!.map(n => n.full_name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event: React.MouseEvent<unknown>, full_name: string) => {\n        const selectedIndex = selected.indexOf(full_name);\n        let newSelected: string[] = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, full_name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = (full_name: string) => selected.indexOf(full_name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.members!.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar numSelected={selected.length} />\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={'small'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={props.members!.length}\n                        />\n                        <TableBody>\n                            {stableSort(props.members!, getSorting(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((member: MemberModel, index: number) => {\n                                    const isItemSelected = isSelected(member.full_name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={event => handleClick(event, member.full_name)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={member.full_name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {member.full_name}\n                                            </TableCell>\n                                            <TableCell align=\"right\">{member.grade}</TableCell>\n                                            <TableCell align=\"right\">{member.dafsc}</TableCell>\n                                            <TableCell align=\"right\">{member.office_symbol}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[5, 25, 50, 100, { value: -1, label: 'All' }]}\n                    component=\"div\"\n                    count={props.members!.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n        </div>\n    );\n};\n\nexport default EnhancedTable;\n","import * as React from 'react';\nimport styled from \"styled-components\";\n\n\nconst LoadingSpinner: React.FC = () => (\n        <Container>\n            <Loader xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 340 340\">\n                <circle cx=\"170\" cy=\"170\" r=\"160\" stroke=\"#5288AA\"/>\n                <circle cx=\"170\" cy=\"170\" r=\"135\" stroke=\"#ffffff\"/>\n                <circle cx=\"170\" cy=\"170\" r=\"110\" stroke=\"#5288AA\"/>\n                <circle cx=\"170\" cy=\"170\" r=\"85\" stroke=\"#ffffff\"/>\n            </Loader>\n        </Container>\n);\n\nexport default LoadingSpinner;\n\nconst Container = styled('div')`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 30vh;\n    background-color: #212121;\n`;\n\nconst Loader = styled('svg')`\n    max-width: 15rem;\n    width: 100%;\n    height: auto;\n    stroke-linecap: round;\n`;\n\n\n\n\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, useTheme, Theme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport EnhancedTable from \"../MiTable\";\nimport MemberModel from \"../../../store/members/MemberModel\";\nimport LoadingSpinner from \"../../data/LoadingSpinner\";\nimport {Box} from \"@material-ui/core\";\nimport SpeedDialBtn from \"../button/SpeedDialBtn\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            height: '100%',\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n            whiteSpace: 'nowrap',\n        },\n        drawerOpen: {\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerClose: {\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            overflowX: 'hidden',\n            width: theme.spacing(7) + 1,\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9) + 1,\n            },\n        },\n        toolbar: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: theme.spacing(0, 1),\n            ...theme.mixins.toolbar,\n        },\n        content: {\n            display: 'block',\n            Height: '100%',\n            padding: theme.spacing(3),\n        },\n        loadingSpinner: {\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'center'\n        }\n    }),\n);\n\ninterface Props {\n    members?: MemberModel[];\n    loading: boolean\n    className?: string;\n}\n\n\nconst NavDrawer: React.FC<Props> = props => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Turbine\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n                <Divider />\n                <List>\n                    {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                        <ListItem button key={text}>\n                            <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n\n                <h1>Welcome to Turbine!</h1>\n                {props.loading ? (\n                    <Box component={'div'} className={classes.loadingSpinner}>\n                    <LoadingSpinner />\n                    </Box>\n                ) : (props.members!.length > 0 && (<EnhancedTable\n                        members={props.members}\n                    />))}\n\n\n\n            </main>\n        </div>\n    );\n};\n\nexport default NavDrawer;\n\n\n\n\n\n","import * as React from 'react'\nimport styled from \"styled-components\";\nimport NavDrawer from \"../components/layout/leftNavBar/NavDrawer\";\n\nfunction Main() {\n    return (\n        <Page>\n            <NavDrawer loading={true}/>\n\n        </Page>\n    )\n}\n\nexport default Main;\n\n\nconst Page = styled('div')`\n    display: flex;\n    flex-direction: row;\n    flex: 1 1 auto;\n`;\n\n","import { css } from '@emotion/core';\n\nconst normalize = css`\n    /*! modern-normalize | MIT License | https://github.com/sindresorhus/modern-normalize */\n\n    /* Document\n    ========================================================================== */\n\n    /**\n  * Use a better box model (opinionated).\n  */\n\n    html {\n        box-sizing: border-box;\n    }\n\n    *,\n    *::before,\n    *::after {\n        box-sizing: inherit;\n    }\n\n    /**\n  * Use a more readable tab size (opinionated).\n  */\n\n    :root {\n        -moz-tab-size: 4;\n        tab-size: 4;\n    }\n\n    /**\n  * Correct the line height in all browsers.\n  */\n\n    html {\n        line-height: 1.15;\n    }\n\n    /* Sections\n    ========================================================================== */\n\n    /**\n  * Remove the margin in all browsers.\n  */\n\n    body {\n        margin: 0;\n    }\n\n    /**\n  * Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  */\n\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif,\n            'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n    }\n\n    /**\n  * Correct the font size and margin on \\`h1\\` elements within \\`section\\` and\n  * \\`article\\` contexts in Chrome, Firefox, and Safari.\n  */\n\n    h1 {\n        font-size: 2em;\n        margin: 0.67em 0;\n    }\n\n    /* Grouping content\n    ========================================================================== */\n\n    /**\n  * Add the correct height in Firefox.\n  */\n\n    hr {\n        height: 0;\n    }\n\n    /* Text-level semantics\n    ========================================================================== */\n\n    /**\n  * Add the correct text decoration in Chrome, Edge, and Safari.\n  */\n\n    abbr[title] {\n        text-decoration: underline dotted;\n    }\n\n    /**\n  * Add the correct font weight in Chrome, Edge, and Safari.\n  */\n\n    b,\n    strong {\n        font-weight: bolder;\n    }\n\n    /**\n  * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)\n  * 2. Correct the odd \\`em\\` font sizing in all browsers.\n  */\n\n    code,\n    kbd,\n    samp,\n    pre {\n        font-family: SFMono-Regular, Consolas, 'Liberation Mono', Menlo, Courier, monospace; /* 1 */\n        font-size: 1em; /* 2 */\n    }\n\n    /**\n  * Add the correct font size in all browsers.\n  */\n\n    small {\n        font-size: 80%;\n    }\n\n    /**\n  * Prevent \\`sub\\` and \\`sup\\` elements from affecting the line height in\n  * all browsers.\n  */\n\n    sub,\n    sup {\n        font-size: 75%;\n        line-height: 0;\n        position: relative;\n        vertical-align: baseline;\n    }\n\n    sub {\n        bottom: -0.25em;\n    }\n\n    sup {\n        top: -0.5em;\n    }\n\n    /* Forms\n    ========================================================================== */\n\n    /**\n  * 1. Change the font styles in all browsers.\n  * 2. Remove the margin in Firefox and Safari.\n  */\n\n    button,\n    input,\n    optgroup,\n    select,\n    textarea {\n        font-family: inherit; /* 1 */\n        font-size: 100%; /* 1 */\n        line-height: 1.15; /* 1 */\n        margin: 0; /* 2 */\n    }\n\n    /**\n  * Remove the inheritance of text transform in Edge and Firefox.\n  * 1. Remove the inheritance of text transform in Firefox.\n  */\n\n    button,\n    select {\n        /* 1 */\n        text-transform: none;\n    }\n\n    /**\n  * Correct the inability to style clickable types in iOS and Safari.\n  */\n\n    button,\n    [type='button'],\n    [type='reset'],\n    [type='submit'] {\n        -webkit-appearance: button;\n    }\n\n    /**\n  * Remove the inner border and padding in Firefox.\n  */\n\n    button::-moz-focus-inner,\n    [type='button']::-moz-focus-inner,\n    [type='reset']::-moz-focus-inner,\n    [type='submit']::-moz-focus-inner {\n        border-style: none;\n        padding: 0;\n    }\n\n    /**\n  * Restore the focus styles unset by the previous rule.\n  */\n\n    button:-moz-focusring,\n    [type='button']:-moz-focusring,\n    [type='reset']:-moz-focusring,\n    [type='submit']:-moz-focusring {\n        outline: 1px dotted ButtonText;\n    }\n\n    /**\n  * Correct the padding in Firefox.\n  */\n\n    fieldset {\n        padding: 0.35em 0.75em 0.625em;\n    }\n\n    /**\n  * Remove the padding so developers are not caught out when they zero out\n  *    \\`fieldset\\` elements in all browsers.\n  */\n\n    legend {\n        padding: 0;\n    }\n\n    /**\n  * Add the correct vertical alignment in Chrome and Firefox.\n  */\n\n    progress {\n        vertical-align: baseline;\n    }\n\n    /**\n  * Correct the cursor style of increment and decrement buttons in Chrome.\n  */\n\n    [type='number']::-webkit-inner-spin-button,\n    [type='number']::-webkit-outer-spin-button {\n        height: auto;\n    }\n\n    /**\n  * 1. Correct the odd appearance in Chrome and Safari.\n  * 2. Correct the outline style in Safari.\n  */\n\n    [type='search'] {\n        -webkit-appearance: textfield; /* 1 */\n        outline-offset: -2px; /* 2 */\n    }\n\n    /**\n  * Remove the inner padding in Chrome and Safari on macOS.\n  */\n\n    [type='search']::-webkit-search-decoration {\n        -webkit-appearance: none;\n    }\n\n    /**\n  * 1. Correct the inability to style clickable types in iOS and Safari.\n  * 2. Change font properties to \\`inherit\\` in Safari.\n  */\n\n    ::-webkit-file-upload-button {\n        -webkit-appearance: button; /* 1 */\n        font: inherit; /* 2 */\n    }\n\n    /* Interactive\n    ========================================================================== */\n\n    /*\n  * Add the correct display in Edge and Firefox.\n  */\n\n    details {\n        display: block;\n    }\n\n    /*\n  * Add the correct display in all browsers.\n  */\n\n    summary {\n        display: list-item;\n    }\n`;\n\nexport default normalize;\n","// This file holds our state type, as well as any other types related to this Redux store.\n\n// Response object for GET /members\n\nimport MemberModel from \"./MemberModel\";\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\nexport type ApiResponse = Record<string, any>;\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum MemberActionTypes {\n    FETCH_REQUEST = '@@members/FETCH_REQUEST',\n    FETCH_SUCCESS = '@@members/FETCH_SUCCESS',\n    FETCH_ERROR = '@@members/FETCH_ERROR',\n    SELECT_MEMBER = '@@members/SELECT_MEMBER',\n    SELECTED = '@@members/SELECTED',\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface MembersState {\n    readonly loading: boolean;\n    readonly data: MemberModel[];\n    readonly errors?: string;\n}\n","import { action } from 'typesafe-actions';\nimport { MemberActionTypes} from './types';\nimport MemberModel from \"./MemberModel\";\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const membersFetchRequest = () => action(MemberActionTypes.FETCH_REQUEST);\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const membersFetchSuccess = (payload: MemberModel[]) => action(MemberActionTypes.FETCH_SUCCESS, payload);\nexport const membersFetchError = (message: string) => action(MemberActionTypes.FETCH_ERROR, message);\n","import styled from \"styled-components\";\n\n\nconst Page = styled('div')`\n    display: flex;\n    flex-direction: row;\n    flex: 1 1 auto;\n`;\n\nexport default Page;\n","import * as React from 'react';\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport Button from '@material-ui/core/Button';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\nimport FileCopyIcon from '@material-ui/icons/FileCopyOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport PrintIcon from '@material-ui/icons/Print';\nimport ShareIcon from '@material-ui/icons/Share';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\ninterface Props {\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            position: \"fixed\",\n            bottom: 0,\n            right: 0,\n            width: '100vw',\n            height: '100vh',\n            transform: 'translateZ(0px)',\n            flexGrow: 1,\n            zIndex: 1000,\n            pointerEvents: 'none',\n        },\n        speedDial: {\n            position: 'absolute',\n            bottom: theme.spacing(2),\n            right: theme.spacing(2),\n        },\n    }),\n);\n\nconst actions = [\n    { icon: <FileCopyIcon />, name: 'Upload' },\n    { icon: <SaveIcon />, name: 'Task' },\n    { icon: <PrintIcon />, name: 'Print' },\n];\n\nconst SpeedDialBtn: React.FC<Props> = props => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [hidden, setHidden] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            {/*<Button onClick={handleVisibility}>Toggle Speed Dial</Button>*/}\n            <Backdrop open={open}  timeout={10}/>\n            <SpeedDial\n                ariaLabel=\"SpeedDial tooltip example\"\n                className={classes.speedDial}\n                hidden={hidden}\n                icon={<SpeedDialIcon />}\n                onClose={handleClose}\n                onOpen={handleOpen}\n                open={open}\n            >\n                {actions.map(action => (\n                    <SpeedDialAction\n                        key={action.name}\n                        icon={action.icon}\n                        tooltipTitle={action.name}\n                        tooltipOpen\n                        onClick={handleClose}\n                        title={'Member Actions'}/>\n                ))}\n            </SpeedDial>\n        </div>\n    );\n};\n\n\nexport default SpeedDialBtn;","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { ApplicationState } from '../../store';\nimport { membersFetchRequest } from '../../store/members/actions';\nimport MemberModel from \"../../store/members/MemberModel\";\nimport Page from \"../../components/layout/Page\";\nimport NavDrawer from \"../../components/layout/leftNavBar/NavDrawer\";\nimport LoadingSpinner from \"../../components/data/LoadingSpinner\";\nimport SpeedDialBtn from \"../../components/layout/button/SpeedDialBtn\";\n\n// Separate state props + dispatch props to their own interfaces.\ninterface PropsFromState {\n    loading: boolean;\n    members: MemberModel[];\n    errors?: string;\n}\n\n// We can use `typeof` here to map our dispatch types to the props, like so.\ninterface PropsFromDispatch {\n    membersFetchRequest: typeof membersFetchRequest;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch;\n\nclass MembersIndexPage extends React.Component<AllProps> {\n    public componentDidMount() {\n        const { membersFetchRequest: fr } = this.props;\n        fr();\n    }\n\n    public render() {\n        const { members, loading } = this.props;\n\n        return (\n            <Page\n            className=\"MembersPage\">\n                <NavDrawer\n                    members={members}\n                    loading={loading}\n                />\n                <SpeedDialBtn\n                />\n            </Page>\n        );\n    }\n}\n\n// It's usually good practice to only include one context at a time in a connected component.\n// Although if necessary, you can always include multiple contexts. Just make sure to\n// separate them from each other to prevent prop conflicts.\nconst mapStateToProps = ({ members }: ApplicationState) => ({\n    loading: members.loading,\n    errors: members.errors,\n    members: members.data,\n});\n\n// mapDispatchToProps is especially useful for constraining our actions to the connected component.\n// You can access these via `this.props`.\nconst mapDispatchToProps = {\n    membersFetchRequest,\n};\n\n// Now let's connect our component!\n// With redux v4's improved typings, we can finally omit generics here.\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(MembersIndexPage);\n\n\n\n\n","import * as React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { Global } from '@emotion/core'\nimport Root from './components/layout/Root'\nimport Main from './pages/index'\nimport normalize from './styles/normalize'\nimport MembersIndexPage from \"./pages/members/index\";\nimport {darktheme} from \"./styles/theme/dark\";\nimport {ThemeProvider} from \"@material-ui/styles\";\n\n\n// If your app is big + you have routes with a lot of components, you should consider\n// code-splitting your routes! If you bundle stuff up with Webpack, I recommend `react-loadable`.\n//\n// $ yarn add react-loadable\n// $ yarn add --dev @types/react-loadable\n//\n// The given `pages/` directory provides an example of a directory structure that's easily\n// code-splittable.\n\n\nconst Routes: React.FC = () => (\n    <Root>\n        <Global styles={normalize} />\n        <Switch>\n            <Route exact path=\"/\" component={Main} />\n            <Route path=\"/members\" component={MembersIndexPage} />\n            {/*<Route component={() => <div>Not Found</div>} />*/}\n        </Switch>\n    </Root>\n\n)\n\nexport default Routes","\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport {blueGrey} from \"@material-ui/core/colors\";\n\nexport const darktheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: blueGrey,\n        secondary: {\n            main: '#E5E5E0',\n        },\n    },\n});\n","import * as React from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Store } from 'redux';\nimport { History } from 'history';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Routes from './routes';\nimport { ApplicationState } from './store';\nimport {darktheme} from \"./styles/theme/dark\";\n\n// Any additional component props go here.\ninterface MainProps {\n    store: Store<ApplicationState>;\n    history: History;\n}\n// Create an intersection type of the component props and our Redux props.\nconst Main: React.FC<MainProps> = ({ store, history }) => {\n    return (\n        <ThemeProvider theme={darktheme}>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                            <Routes />\n            </ConnectedRouter>\n        </Provider>\n        </ThemeProvider>\n    );\n};\n\n// Normally you wouldn't need any generics here (since types infer from the passed functions).\n// But since we pass some props from the `index.js` file, we have to include them.\n// For an example of a `connect` function without generics, see `./containers/LayoutContainer`.\nexport default Main;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Example for using discriminated union types.\nexport type ThemeColors = 'light' | 'dark';\n\n// Use enums for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum LayoutActionTypes {\n    SET_THEME = '@@layout/SET_THEME',\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface LayoutState {\n    readonly theme: ThemeColors;\n}\n","import { Reducer } from 'redux';\nimport { LayoutState, LayoutActionTypes } from './types';\n\n// Type-safe initialState!\nexport const initialState: LayoutState = {\n    theme: 'dark',\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<LayoutState> = (state = initialState, action) => {\n    switch (action.type) {\n        case LayoutActionTypes.SET_THEME: {\n            return { ...state, theme: action.payload };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as layoutReducer };\n","export async function callApi(method: string, path: string, data?: any) {\n    const res = await fetch(`/${path}`, {\n        method,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    });\n    if (res.ok) {\n        return res.json();\n    }\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { MemberActionTypes } from './types';\nimport { membersFetchError, membersFetchSuccess } from './actions';\nimport { callApi } from '../../utils/api';\n\n\nfunction *handleFetch() {\n    try {\n        // To call async functions, use redux-saga's `call()`.\n        const res = yield call(callApi, 'get', 'api/members');\n\n        if (res.error) {\n            yield put(membersFetchError(res.error));\n        } else {\n            yield put(membersFetchSuccess(res));\n        }\n    } catch (err) {\n        if (err instanceof Error && err.stack) {\n            yield put(membersFetchError(err.stack));\n        } else {\n            yield put(membersFetchError('An unknown error occured.'));\n        }\n    }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction *watchFetchRequest() {\n    yield takeEvery(MemberActionTypes.FETCH_REQUEST, handleFetch);\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction *membersSaga() {\n    yield all([fork(watchFetchRequest)]);\n}\n\nexport default membersSaga;\n","import { Reducer } from 'redux';\nimport { MembersState, MemberActionTypes } from './types';\nimport MemberModel from \"./MemberModel\";\n\n// Type-safe initialState!\nexport const initialState: MembersState = {\n    data: [] as MemberModel[],\n    errors: undefined,\n    loading: false,\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<MembersState> = (state = initialState, action) => {\n    switch (action.type) {\n        case MemberActionTypes.FETCH_REQUEST: {\n            console.log('fetching members');\n            return {\n                ...state,\n                loading: true\n            };\n        }\n        case MemberActionTypes.FETCH_SUCCESS: {\n            return { ...state, loading: false, data: action.payload };\n        }\n        case MemberActionTypes.FETCH_ERROR: {\n            return { ...state, loading: false, errors: action.payload };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as membersReducer };\n","\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nimport SquadronModel from \"./SquadronModel\";\n\nexport enum SquadronActionTypes {\n    FETCH_REQUEST = '@@squadrons/FETCH_REQUEST',\n    FETCH_SUCCESS = '@@squadrons/FETCH_SUCCESS',\n    FETCH_ERROR = '@@squadrons/FETCH_ERROR',\n    POST_REQUEST = '@@squadrons/POST_REQUEST',\n    POST_SUCCESS = '@@squadrons/POST_SUCCESS',\n    POST_ERROR = '@@squadrons/POST_ERROR',\n    SHOW_INPUT = '@@squadrons/SHOW_INPUT',\n    UPDATE_INPUT = '@@squadrons/UPDATE_INPUT'\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface SquadronsState {\n    readonly loading: boolean;\n    readonly squadrons: SquadronModel[];\n    readonly showInput: boolean;\n    readonly newInput: SquadronModel | undefined;\n    readonly posting: boolean;\n    readonly errors?: string;\n}\n","import { action } from 'typesafe-actions';\nimport { SquadronActionTypes} from './types';\nimport SquadronModel from \"./SquadronModel\";\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const squadronsFetchRequest = () => action(SquadronActionTypes.FETCH_REQUEST);\nexport const squadronsFetchSuccess = (payload: SquadronModel[]) => action(SquadronActionTypes.FETCH_SUCCESS, payload);\nexport const squadronsFetchError = (message: string) => action(SquadronActionTypes.FETCH_ERROR, message);\n\nexport const squadronPostRequest = (data: SquadronModel) => action(SquadronActionTypes.POST_REQUEST, data);\nexport const squadronPostSuccess = () => action(SquadronActionTypes.POST_SUCCESS);\nexport const squadronPostError = (message: string) => action(SquadronActionTypes.POST_ERROR, message);\n\nexport const showSquadronInput = () => action(SquadronActionTypes.SHOW_INPUT);\nexport const updateSquadronInputState = (data: SquadronModel) => action(SquadronActionTypes.UPDATE_INPUT, data);\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { SquadronActionTypes } from './types';\nimport { squadronPostSuccess, squadronsFetchError, squadronsFetchSuccess} from './actions';\nimport { callApi } from '../../utils/api';\nimport SquadronModel from \"./SquadronModel\";\n\n\nfunction *handleFetch() {\n    try {\n        // To call async functions, use redux-saga's `call()`.\n        const res = yield call(callApi, 'get', 'api/squadrons');\n\n        if (res.error) {\n            yield put(squadronsFetchError(res.error));\n        } else {\n            yield put(squadronsFetchSuccess(res));\n        }\n    } catch (err) {\n        if (err instanceof Error && err.stack) {\n            yield put(squadronsFetchError(err.stack));\n        } else {\n            yield put(squadronsFetchError('An unknown error occured.'));\n        }\n    }\n}\n\nexport async function postNewSquadron(data: SquadronModel) {\n        // To call async functions, use redux-saga's `call()`.\n        const res = await callApi('post', 'api/squadrons/add', data);\n    if (await res.json) {\n        squadronPostSuccess();\n    }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction *watchFetchRequest() {\n    yield takeEvery(SquadronActionTypes.FETCH_REQUEST, handleFetch);\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction *squadronSaga() {\n    yield all([fork(watchFetchRequest)]);\n}\n\nexport default squadronSaga;","import { Reducer } from 'redux';\nimport { SquadronsState, SquadronActionTypes } from './types';\nimport SquadronModel from \"./SquadronModel\";\nimport {postNewSquadron} from \"./sagas\";\n\n// Type-safe initialState!\nexport const initialState: SquadronsState = {\n    squadrons: [] as SquadronModel[],\n    newInput: {} as SquadronModel,\n    errors: undefined,\n    loading: false,\n    showInput: false,\n    posting: false,\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<SquadronsState> = (state = initialState, action) => {\n    switch (action.type) {\n        case SquadronActionTypes.FETCH_REQUEST: {\n            return {\n                ...state,\n                loading: true\n            };\n        }\n        case SquadronActionTypes.FETCH_SUCCESS: {\n            return { ...state, loading: false, squadrons: action.payload };\n        }\n        case SquadronActionTypes.FETCH_ERROR: {\n            return { ...state, loading: false, errors: action.payload };\n        }\n        case SquadronActionTypes.SHOW_INPUT: {\n            return {\n                ...state,\n                showInput: !state.showInput\n            };\n        }\n        case SquadronActionTypes.POST_REQUEST: {\n            console.log(\"POST_REQUEST\");\n            postNewSquadron(action.payload);\n            return {\n                ...state,\n                posting: true\n            };\n        }\n        case SquadronActionTypes.POST_SUCCESS: {\n            console.log(\"POST_SUCCESS\");\n            return {\n                ...state,\n                showInput: false,\n                posting: false\n            };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as squadronsReducer };","\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nimport FlightModel from \"./FlightModel\";\n\nexport enum FlightActionTypes {\n    FETCH_REQUEST = '@@flights/FETCH_REQUEST',\n    FETCH_SUCCESS = '@@flights/FETCH_SUCCESS',\n    FETCH_ERROR = '@@flights/FETCH_ERROR',\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface FlightsState {\n    readonly loading: boolean;\n    readonly flights: FlightModel[];\n    readonly errors?: string;\n}\n","import { Reducer } from 'redux';\nimport { FlightsState, FlightActionTypes } from './types';\nimport FlightModel from \"./FlightModel\";\n\n// Type-safe initialState!\nexport const initialState: FlightsState = {\n    flights: [] as FlightModel[],\n    errors: undefined,\n    loading: false,\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<FlightsState> = (state = initialState, action) => {\n    switch (action.type) {\n        case FlightActionTypes.FETCH_REQUEST: {\n            return {\n                ...state,\n                loading: true\n            };\n        }\n        case FlightActionTypes.FETCH_SUCCESS: {\n            return { ...state, loading: false, flights: action.payload };\n        }\n        case FlightActionTypes.FETCH_ERROR: {\n            return { ...state, loading: false, errors: action.payload };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as flightsReducer };","\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nimport AETModel from \"./AETModel\";\n\nexport enum AETActionTypes {\n    FETCH_REQUEST = '@@AETs/FETCH_REQUEST',\n    FETCH_SUCCESS = '@@AETs/FETCH_SUCCESS',\n    FETCH_ERROR = '@@AETs/FETCH_ERROR',\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface AETsState {\n    readonly loading: boolean;\n    readonly AETs: AETModel[];\n    readonly errors?: string;\n}\n","import { Reducer } from 'redux';\nimport { AETsState, AETActionTypes } from './types';\nimport AETModel from \"./AETModel\";\n\n// Type-safe initialState!\nexport const initialState: AETsState = {\n    AETs: [] as AETModel[],\n    errors: undefined,\n    loading: false,\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<AETsState> = (state = initialState, action) => {\n    switch (action.type) {\n        case AETActionTypes.FETCH_REQUEST: {\n            return {\n                ...state,\n                loading: true\n            };\n        }\n        case AETActionTypes.FETCH_SUCCESS: {\n            return { ...state, loading: false, AETs: action.payload };\n        }\n        case AETActionTypes.FETCH_ERROR: {\n            return { ...state, loading: false, errors: action.payload };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as AETsReducer };","import { action } from 'typesafe-actions';\nimport { FlightActionTypes} from './types';\nimport FlightModel from \"./FlightModel\";\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const flightsFetchRequest = () => action(FlightActionTypes.FETCH_REQUEST);\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const flightsFetchSuccess = (payload: FlightModel[]) => action(FlightActionTypes.FETCH_SUCCESS, payload);\nexport const flightsFetchError = (message: string) => action(FlightActionTypes.FETCH_ERROR, message);\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { FlightActionTypes } from './types';\nimport { flightsFetchError, flightsFetchSuccess } from './actions';\nimport { callApi } from '../../utils/api';\n\n\nfunction *handleFetch() {\n    try {\n        // To call async functions, use redux-saga's `call()`.\n        const res = yield call(callApi, 'get', 'api/flights');\n\n        if (res.error) {\n            yield put(flightsFetchError(res.error));\n        } else {\n            yield put(flightsFetchSuccess(res));\n        }\n    } catch (err) {\n        if (err instanceof Error && err.stack) {\n            yield put(flightsFetchError(err.stack));\n        } else {\n            yield put(flightsFetchError('An unknown error occured.'));\n        }\n    }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction *watchFetchRequest() {\n    yield takeEvery(FlightActionTypes.FETCH_REQUEST, handleFetch);\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction *flightSaga() {\n    yield all([fork(watchFetchRequest)]);\n}\n\nexport default flightSaga;","import { action } from 'typesafe-actions';\nimport { AETActionTypes} from './types';\nimport AETModel from \"./AETModel\";\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const AETsFetchRequest = () => action(AETActionTypes.FETCH_REQUEST);\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const AETsFetchSuccess = (payload: AETModel[]) => action(AETActionTypes.FETCH_SUCCESS, payload);\nexport const AETsFetchError = (message: string) => action(AETActionTypes.FETCH_ERROR, message);\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { AETActionTypes } from './types';\nimport { AETsFetchError, AETsFetchSuccess } from './actions';\nimport { callApi } from '../../utils/api';\n\nfunction *handleFetch() {\n    try {\n        // To call async functions, use redux-saga's `call()`.\n        const res = yield call(callApi, 'get','api/AETs');\n\n        if (res.error) {\n            yield put(AETsFetchError(res.error));\n        } else {\n            yield put(AETsFetchSuccess(res));\n        }\n    } catch (err) {\n        if (err instanceof Error && err.stack) {\n            yield put(AETsFetchError(err.stack));\n        } else {\n            yield put(AETsFetchError('An unknown error occured.'));\n        }\n    }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction *watchFetchRequest() {\n    yield takeEvery(AETActionTypes.FETCH_REQUEST, handleFetch);\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction *AETSaga() {\n    yield all([fork(watchFetchRequest)]);\n}\n\nexport default AETSaga;","import { combineReducers } from 'redux';\nimport { all, fork } from 'redux-saga/effects';\nimport { connectRouter, RouterState } from 'connected-react-router';\nimport { History } from 'history';\n\nimport { LayoutState, layoutReducer } from './layout';\n\nimport membersSaga from './members/sagas';\nimport { membersReducer } from './members/reducer';\nimport { MembersState } from './members/types';\nimport { SquadronsState } from \"./squadrons/types\";\nimport { squadronsReducer } from \"./squadrons/reducer\";\nimport squadronSaga from \"./squadrons/sagas\";\nimport {FlightsState} from \"./flights/types\";\nimport {AETsState} from \"./AETs/types\";\nimport {flightsReducer} from \"./flights/reducer\";\nimport {AETsReducer} from \"./AETs/reducer\";\nimport flightSaga from \"./flights/sagas\";\nimport AETSaga from \"./AETs/sagas\";\n\n// The top-level state object\nexport interface ApplicationState {\n    layout: LayoutState;\n    members: MembersState;\n    squadrons: SquadronsState;\n    flights: FlightsState;\n    AETs: AETsState;\n    router: RouterState;\n}\n\n// Whenever an action is dispatched, Redux will update each top-level application state property\n// using the reducer with the matching name. It's important that the names match exactly, and that\n// the reducer acts on the corresponding ApplicationState property type.\nexport const createRootReducer = (history: History) =>\n    combineReducers({\n        layout: layoutReducer,\n        squadrons: squadronsReducer,\n        flights: flightsReducer,\n        AETs: AETsReducer,\n        members: membersReducer,\n        router: connectRouter(history),\n    });\n\n// Here we use `redux-saga` to trigger actions asynchronously. `redux-saga` uses something called a\n// \"generator function\", which you can read about here:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*\nexport function* rootSaga() {\n    yield all([fork(membersSaga),fork(squadronSaga),fork(flightSaga), fork(AETSaga)]);\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { createBrowserHistory } from 'history';\nimport './index.scss';\n\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './configureStore';\n\nimport 'typeface-ibm-plex-sans';\n\n// We use hash history because this example is going to be hosted statically.\n// Normally you would use browser history.\nconst history = createBrowserHistory();\n\nconst initialState = window.INITIAL_REDUX_STATE;\nconst store = configureStore(history, initialState);\n\nReactDOM.render(<Main store={store} history={history} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { Store, createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n// `react-router-redux` is deprecated, so we use `connected-react-router`.\n// This provides a Redux middleware which connects to our `react-router` instance.\nimport { routerMiddleware } from 'connected-react-router';\n// We'll be using Redux Devtools. We can use the `composeWithDevTools()`\n// directive so we can pass our middleware along with it\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// If you use react-router, don't forget to pass in your history type.\nimport { History } from 'history';\n\n// Import the state interface and our combined reducers/sagas.\nimport { ApplicationState, createRootReducer, rootSaga } from './store';\n\nexport default function configureStore(history: History, initialState: ApplicationState): Store<ApplicationState> {\n    // create the composing function for our middlewares\n    const composeEnhancers = composeWithDevTools({});\n    // create the redux-saga middleware\n    const sagaMiddleware = createSagaMiddleware();\n\n    // We'll create our store with the combined reducers/sagas, and the initial Redux state that\n    // we'll be passing from our entry point.\n    const store = createStore(\n        createRootReducer(history),\n        initialState,\n        composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware)),\n    );\n\n    // Don't forget to run the root saga, and return the store object.\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n"],"sourceRoot":""}