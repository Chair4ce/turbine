{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/chairforce/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: block;\\n  width: 100%;\\n  font-family: \", \";\\n  font-size: large;\\n  margin-bottom: 1px;\\n  \\n  .input {\\n  width: 100%;\\n  height: 16px;\\n  background: white;\\n  }\\n \\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport { connect } from \"react-redux\";\nimport { squadronPostRequest, updateSquadronInputState } from \"../../../store/squadrons/actions\";\n\nclass AddSquadronBar extends React.Component {\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  squadronPostRequest,\n  updateSquadronInputState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSquadronBar);\nconst Wrapper = styled('div')(_templateObject(), props => props.theme.fonts.headings);","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx"],"names":["React","styled","connect","squadronPostRequest","updateSquadronInputState","AddSquadronBar","Component","render","mapStateToProps","mapDispatchToProps","Wrapper","props","theme","fonts","headings"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,mBAAR,EAA6BC,wBAA7B,QAA4D,kCAA5D;;AAcA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAAuD;AAE5CC,EAAAA,MAAP,GAAgB;AACZ,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACA,MAAA,WAAW,EAAE,MADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAOH;;AAVkD;;AAavD,MAAMC,eAAe,GAAG,OAAO,EAAP,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG;AACvBN,EAAAA,mBADuB;AAEvBC,EAAAA;AAFuB,CAA3B;AAKA,eAAeF,OAAO,CAClBM,eADkB,EAElBC,kBAFkB,CAAP,CAGbJ,cAHa,CAAf;AAKI,MAAMK,OAAO,GAAGT,MAAM,CAAC,KAAD,CAAT,oBAGAU,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,QAH3B,CAAb","sourcesContent":["import * as React from 'react';\nimport {ApplicationState} from \"../../../store\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport styled from \"../../../utils/styled\";\nimport {connect} from \"react-redux\";\nimport {squadronPostRequest, updateSquadronInputState} from \"../../../store/squadrons/actions\";\n\ninterface PropsFromState {\n\n}\n\ninterface PropsFromDispatch {\n    PostRequest: typeof squadronPostRequest;\n    updateInputState: typeof updateSquadronInputState;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch;\n\nclass AddSquadronBar extends React.Component<AllProps> {\n\n    public render() {\n        return (\n            <Wrapper>\n                <input\n                placeholder={\"Name\"}>\n                </input>\n            </Wrapper>\n        );\n    }\n}\n\nconst mapStateToProps = () => ({\n});\n\n\nconst mapDispatchToProps = {\n    squadronPostRequest,\n    updateSquadronInputState\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AddSquadronBar);\n\n    const Wrapper = styled('div')`\n  display: block;\n  width: 100%;\n  font-family: ${props => props.theme.fonts.headings};\n  font-size: large;\n  margin-bottom: 1px;\n  \n  .input {\n  width: 100%;\n  height: 16px;\n  background: white;\n  }\n \n`;"]},"metadata":{},"sourceType":"module"}