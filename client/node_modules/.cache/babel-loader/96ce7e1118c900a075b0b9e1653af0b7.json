{"ast":null,"code":"import _defineProperty from \"/Users/chairforce/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { AETActionTypes } from './types';\n// Type-safe initialState!\nexport const initialState = {\n  AETs: [],\n  errors: undefined,\n  loading: false\n}; // Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case AETActionTypes.FETCH_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          loading: true\n        });\n      }\n\n    case AETActionTypes.FETCH_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          AETs: action.payload\n        });\n      }\n\n    case AETActionTypes.FETCH_ERROR:\n      {\n        return _objectSpread({}, state, {\n          loading: false,\n          errors: action.payload\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}; // Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\n\n\nexport { reducer as AETsReducer };","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/store/AETs/reducer.ts"],"names":["AETActionTypes","initialState","AETs","errors","undefined","loading","reducer","state","action","type","FETCH_REQUEST","FETCH_SUCCESS","payload","FETCH_ERROR","AETsReducer"],"mappings":";;;;;;AACA,SAAoBA,cAApB,QAA0C,SAA1C;AAGA;AACA,OAAO,MAAMC,YAAuB,GAAG;AACnCC,EAAAA,IAAI,EAAE,EAD6B;AAEnCC,EAAAA,MAAM,EAAEC,SAF2B;AAGnCC,EAAAA,OAAO,EAAE;AAH0B,CAAhC,C,CAMP;AACA;;AACA,MAAMC,OAA2B,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,cAAc,CAACU,aAApB;AAAmC;AAC/B,iCACOH,KADP;AAEIF,UAAAA,OAAO,EAAE;AAFb;AAIH;;AACD,SAAKL,cAAc,CAACW,aAApB;AAAmC;AAC/B,iCAAYJ,KAAZ;AAAmBF,UAAAA,OAAO,EAAE,KAA5B;AAAmCH,UAAAA,IAAI,EAAEM,MAAM,CAACI;AAAhD;AACH;;AACD,SAAKZ,cAAc,CAACa,WAApB;AAAiC;AAC7B,iCAAYN,KAAZ;AAAmBF,UAAAA,OAAO,EAAE,KAA5B;AAAmCF,UAAAA,MAAM,EAAEK,MAAM,CAACI;AAAlD;AACH;;AACD;AAAS;AACL,eAAOL,KAAP;AACH;AAfL;AAiBH,CAlBD,C,CAoBA;AACA;;;AACA,SAASD,OAAO,IAAIQ,WAApB","sourcesContent":["import { Reducer } from 'redux';\nimport { AETsState, AETActionTypes } from './types';\nimport AETModel from \"./AETModel\";\n\n// Type-safe initialState!\nexport const initialState: AETsState = {\n    AETs: [] as AETModel[],\n    errors: undefined,\n    loading: false,\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<AETsState> = (state = initialState, action) => {\n    switch (action.type) {\n        case AETActionTypes.FETCH_REQUEST: {\n            return {\n                ...state,\n                loading: true\n            };\n        }\n        case AETActionTypes.FETCH_SUCCESS: {\n            return { ...state, loading: false, AETs: action.payload };\n        }\n        case AETActionTypes.FETCH_ERROR: {\n            return { ...state, loading: false, errors: action.payload };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as AETsReducer };"]},"metadata":{},"sourceType":"module"}