{"ast":null,"code":"import{action}from'typesafe-actions';import{SquadronActionTypes}from'./types';// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport var squadronsFetchRequest=function squadronsFetchRequest(){return action(SquadronActionTypes.FETCH_REQUEST);};export var squadronsFetchSuccess=function squadronsFetchSuccess(payload){return action(SquadronActionTypes.FETCH_SUCCESS,payload);};export var squadronsFetchError=function squadronsFetchError(message){return action(SquadronActionTypes.FETCH_ERROR,message);};export var squadronPostRequest=function squadronPostRequest(data){return action(SquadronActionTypes.POST_REQUEST,data);};export var squadronPostSuccess=function squadronPostSuccess(){return action(SquadronActionTypes.POST_SUCCESS);};export var squadronPostError=function squadronPostError(message){return action(SquadronActionTypes.POST_ERROR,message);};export var showSquadronInput=function showSquadronInput(){return action(SquadronActionTypes.SHOW_INPUT);};export var updateSquadronInputState=function updateSquadronInputState(data){return action(SquadronActionTypes.UPDATE_INPUT,data);};","map":{"version":3,"sources":["/Users/ridley/workspace/turbine/client/src/store/squadrons/actions.ts"],"names":["action","SquadronActionTypes","squadronsFetchRequest","FETCH_REQUEST","squadronsFetchSuccess","payload","FETCH_SUCCESS","squadronsFetchError","message","FETCH_ERROR","squadronPostRequest","data","POST_REQUEST","squadronPostSuccess","POST_SUCCESS","squadronPostError","POST_ERROR","showSquadronInput","SHOW_INPUT","updateSquadronInputState","UPDATE_INPUT"],"mappings":"AAAA,OAASA,MAAT,KAAuB,kBAAvB,CACA,OAASC,mBAAT,KAAmC,SAAnC,CAGA;AACA;AACA;AAEA;AACA;AACA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAMF,CAAAA,MAAM,CAACC,mBAAmB,CAACE,aAArB,CAAZ,EAA9B,CACP,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,OAAD,QAA8BL,CAAAA,MAAM,CAACC,mBAAmB,CAACK,aAArB,CAAoCD,OAApC,CAApC,EAA9B,CACP,MAAO,IAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,OAAD,QAAqBR,CAAAA,MAAM,CAACC,mBAAmB,CAACQ,WAArB,CAAkCD,OAAlC,CAA3B,EAA5B,CAEP,MAAO,IAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,IAAD,QAAyBX,CAAAA,MAAM,CAACC,mBAAmB,CAACW,YAArB,CAAmCD,IAAnC,CAA/B,EAA5B,CACP,MAAO,IAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,SAAMb,CAAAA,MAAM,CAACC,mBAAmB,CAACa,YAArB,CAAZ,EAA5B,CACP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACP,OAAD,QAAqBR,CAAAA,MAAM,CAACC,mBAAmB,CAACe,UAArB,CAAiCR,OAAjC,CAA3B,EAA1B,CAEP,MAAO,IAAMS,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,SAAMjB,CAAAA,MAAM,CAACC,mBAAmB,CAACiB,UAArB,CAAZ,EAA1B,CACP,MAAO,IAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACR,IAAD,QAAyBX,CAAAA,MAAM,CAACC,mBAAmB,CAACmB,YAArB,CAAmCT,IAAnC,CAA/B,EAAjC","sourcesContent":["import { action } from 'typesafe-actions';\nimport { SquadronActionTypes} from './types';\nimport SquadronModel from \"./SquadronModel\";\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const squadronsFetchRequest = () => action(SquadronActionTypes.FETCH_REQUEST);\nexport const squadronsFetchSuccess = (payload: SquadronModel[]) => action(SquadronActionTypes.FETCH_SUCCESS, payload);\nexport const squadronsFetchError = (message: string) => action(SquadronActionTypes.FETCH_ERROR, message);\n\nexport const squadronPostRequest = (data: SquadronModel) => action(SquadronActionTypes.POST_REQUEST, data);\nexport const squadronPostSuccess = () => action(SquadronActionTypes.POST_SUCCESS);\nexport const squadronPostError = (message: string) => action(SquadronActionTypes.POST_ERROR, message);\n\nexport const showSquadronInput = () => action(SquadronActionTypes.SHOW_INPUT);\nexport const updateSquadronInputState = (data: SquadronModel) => action(SquadronActionTypes.UPDATE_INPUT, data);\n"]},"metadata":{},"sourceType":"module"}