{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/chairforce/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: block;\\n  width: 100%;\\n  font-family: \", \";\\n  font-size: large;\\n  margin-bottom: 1px;\\n  \\n  .input {\\n  width: 100%;\\n  height: 16px;\\n  background: white;\\n  }\\n \\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport { postNewSquadron } from \"../../../store/squadrons/sagas\";\nimport { connect } from \"react-redux\";\nimport { updateNewSquadron } from \"../../../store/squadrons/actions\";\n\nclass AddSquadronBar extends React.Component {\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Name\"));\n  }\n\n}\n\nconst mapStateToProps = ({\n  squadrons\n}) => ({\n  saving: squadrons.saving,\n  squadrons: squadrons.squadrons,\n  newSquadron: squadrons.newSquadron,\n  squadronsErrors: squadrons.errors\n});\n\nconst mapDispatchToProps = {\n  postNewSquadron,\n  updateNewSquadron\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSquadronBar);\nconst Wrapper = styled('div')(_templateObject(), props => props.theme.fonts.headings);","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx"],"names":["React","styled","postNewSquadron","connect","updateNewSquadron","AddSquadronBar","Component","render","mapStateToProps","squadrons","saving","newSquadron","squadronsErrors","errors","mapDispatchToProps","Wrapper","props","theme","fonts","headings"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,kCAAhC;;AAiBA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAAuD;AAE5CC,EAAAA,MAAP,GAAgB;AACZ,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ;AAOH;;AAVkD;;AAavD,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,MAAoC;AACxDC,EAAAA,MAAM,EAAED,SAAS,CAACC,MADsC;AAExDD,EAAAA,SAAS,EAAEA,SAAS,CAACA,SAFmC;AAGxDE,EAAAA,WAAW,EAAEF,SAAS,CAACE,WAHiC;AAIxDC,EAAAA,eAAe,EAAEH,SAAS,CAACI;AAJ6B,CAApC,CAAxB;;AAQA,MAAMC,kBAAkB,GAAG;AACvBZ,EAAAA,eADuB;AAEvBE,EAAAA;AAFuB,CAA3B;AAKA,eAAeD,OAAO,CAClBK,eADkB,EAElBM,kBAFkB,CAAP,CAGbT,cAHa,CAAf;AAKI,MAAMU,OAAO,GAAGd,MAAM,CAAC,KAAD,CAAT,oBAGAe,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,QAH3B,CAAb","sourcesContent":["import * as React from 'react';\nimport {ApplicationState} from \"../../../store\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport styled from \"../../../utils/styled\";\nimport {postNewSquadron} from \"../../../store/squadrons/sagas\";\nimport {connect} from \"react-redux\";\nimport {updateNewSquadron} from \"../../../store/squadrons/actions\";\n\ninterface PropsFromState {\n    saving: boolean | undefined;\n    squadrons: SquadronModel[];\n    newSquadron: SquadronModel | undefined;\n    squadronsErrors?: string;\n}\n\ninterface PropsFromDispatch {\n    postNewSquadron: typeof postNewSquadron;\n    updateNewSquadron: typeof updateNewSquadron;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch;\n\nclass AddSquadronBar extends React.Component<AllProps> {\n\n    public render() {\n        return (\n            <Wrapper>\n                <input>\n                    Name\n                </input>\n            </Wrapper>\n        );\n    }\n}\n\nconst mapStateToProps = ({squadrons}: ApplicationState) => ({\n    saving: squadrons.saving,\n    squadrons: squadrons.squadrons,\n    newSquadron: squadrons.newSquadron,\n    squadronsErrors: squadrons.errors,\n});\n\n\nconst mapDispatchToProps = {\n    postNewSquadron,\n    updateNewSquadron\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AddSquadronBar);\n\n    const Wrapper = styled('div')`\n  display: block;\n  width: 100%;\n  font-family: ${props => props.theme.fonts.headings};\n  font-size: large;\n  margin-bottom: 1px;\n  \n  .input {\n  width: 100%;\n  height: 16px;\n  background: white;\n  }\n \n`;"]},"metadata":{},"sourceType":"module"}