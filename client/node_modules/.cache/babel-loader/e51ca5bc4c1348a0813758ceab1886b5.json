{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/chairforce/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/chairforce/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around;\\n  width: 100%;\\n  font-family: \", \";\\n  font-size: 16px;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n  \\n  .SquadronInput {\\n  width: 60px;\\n  height: 20px;\\n  background: none;\\n  border: solid 1px white;\\n  border-radius: 4px;\\n  color: white;\\n  }\\n  \\n  .PASInput {\\n   width: 120px;\\n  height: 20px;\\n   background: none;\\n  border: solid 1px white;\\n  border-radius: 4px;\\n  color: white;\\n  ;\\n  }\\n \\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport { connect } from \"react-redux\";\nimport { squadronPostRequest, squadronsFetchRequest } from \"../../../store/squadrons/actions\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport { useState } from \"react\";\nimport { postNewSquadron } from \"../../../store/squadrons/sagas\";\n\nconst AddSquadronBar = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        newSqName = _useState2[0],\n        updateSqName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newSqPAS = _useState4[0],\n        updatePAS = _useState4[1];\n\n  function handleClick() {\n    postNewSquadron(new SquadronModel(newSqName, newSqPAS));\n    props.fetchSquadrons();\n  }\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: e => updateSqName(e.target.value),\n    className: \"SquadronInput\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onChange: e => updatePAS(e.target.value),\n    className: \"PASInput\",\n    placeholder: \"PAS Code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => {\n      handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"save\"));\n};\n\nconst mapStateToProps = ({\n  squadrons\n}) => ({\n  newSquadron: squadrons.newInput,\n  post: squadrons.posting\n});\n\nconst mapDispatchToProps = {\n  postNewSquadron: squadronPostRequest,\n  fetchSquadrons: squadronsFetchRequest\n};\nexport const StyledAddSquadronBar = connect(mapStateToProps, mapDispatchToProps)(AddSquadronBar);\nconst Wrapper = styled('div')(_templateObject(), props => props.theme.fonts.headings);","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx"],"names":["React","styled","connect","squadronPostRequest","squadronsFetchRequest","SquadronModel","useState","postNewSquadron","AddSquadronBar","props","newSqName","updateSqName","newSqPAS","updatePAS","handleClick","fetchSquadrons","e","target","value","mapStateToProps","squadrons","newSquadron","newInput","post","posting","mapDispatchToProps","StyledAddSquadronBar","Wrapper","theme","fonts","headings"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,mBAAR,EAA6BC,qBAA7B,QAAmF,kCAAnF;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;;AAWA,MAAMC,cAAkC,GAAGC,KAAK,IAAI;AAAA,oBACdH,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,QACzCI,SADyC;AAAA,QAC9BC,YAD8B;;AAAA,qBAElBL,QAAQ,CAAC,EAAD,CAFU;AAAA;AAAA,QAEzCM,QAFyC;AAAA,QAE/BC,SAF+B;;AAIhD,WAASC,WAAT,GAAuB;AACnBP,IAAAA,eAAe,CAAC,IAAIF,aAAJ,CAAkBK,SAAlB,EAA6BE,QAA7B,CAAD,CAAf;AACAH,IAAAA,KAAK,CAACM,cAAN;AACH;;AAED,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,QAAQ,EAAGC,CAAD,IAAYL,YAAY,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CADtC;AAEI,IAAA,SAAS,EAAE,eAFf;AAGI,IAAA,WAAW,EAAE,MAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AACI,IAAA,QAAQ,EAAGF,CAAD,IAAYH,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CADnC;AAEI,IAAA,SAAS,EAAE,UAFf;AAGI,IAAA,WAAW,EAAE,UAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAWI;AACI,IAAA,OAAO,EAAE,MAAM;AACXJ,MAAAA,WAAW;AACd,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ,CADJ;AAqBH,CA9BD;;AAgCA,MAAMK,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,MAAoC;AACxDC,EAAAA,WAAW,EAAED,SAAS,CAACE,QADiC;AAExDC,EAAAA,IAAI,EAAEH,SAAS,CAACI;AAFwC,CAApC,CAAxB;;AAMA,MAAMC,kBAAkB,GAAG;AACvBlB,EAAAA,eAAe,EAAEJ,mBADM;AAEvBY,EAAAA,cAAc,EAAEX;AAFO,CAA3B;AAKA,OAAO,MAAMsB,oBAAoB,GAAGxB,OAAO,CACvCiB,eADuC,EAEvCM,kBAFuC,CAAP,CAGlCjB,cAHkC,CAA7B;AAKP,MAAMmB,OAAO,GAAG1B,MAAM,CAAC,KAAD,CAAT,oBAKIQ,KAAK,IAAIA,KAAK,CAACmB,KAAN,CAAYC,KAAZ,CAAkBC,QAL/B,CAAb","sourcesContent":["import * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport {connect} from \"react-redux\";\nimport {squadronPostRequest, squadronsFetchRequest, updateSquadronInputState} from \"../../../store/squadrons/actions\";\nimport {ApplicationState} from \"../../../store\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport {useState} from \"react\";\nimport {postNewSquadron} from \"../../../store/squadrons/sagas\";\n\ninterface Props {\n}\n\ninterface PropsFromDispatch {\n    fetchSquadrons: typeof squadronsFetchRequest;\n}\n\ntype AllProps = Props & PropsFromDispatch;\n\nconst AddSquadronBar: React.FC<AllProps> = props => {\n    const [newSqName, updateSqName] = useState(\"\");\n    const [newSqPAS, updatePAS] = useState(\"\");\n\n    function handleClick() {\n        postNewSquadron(new SquadronModel(newSqName, newSqPAS));\n        props.fetchSquadrons();\n    }\n\n    return (\n        <Wrapper>\n            <input\n                onChange={(e: any) => updateSqName(e.target.value)}\n                className={\"SquadronInput\"}\n                placeholder={\"Name\"}>\n            </input>\n            <input\n                onChange={(e: any) => updatePAS(e.target.value)}\n                className={\"PASInput\"}\n                placeholder={\"PAS Code\"}>\n            </input>\n            <button\n                onClick={() => {\n                    handleClick()\n                }}\n            >\n                save\n            </button>\n        </Wrapper>\n    )\n};\n\nconst mapStateToProps = ({squadrons}: ApplicationState) => ({\n    newSquadron: squadrons.newInput,\n    post: squadrons.posting,\n});\n\n\nconst mapDispatchToProps = {\n    postNewSquadron: squadronPostRequest,\n    fetchSquadrons: squadronsFetchRequest\n};\n\nexport const StyledAddSquadronBar = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AddSquadronBar);\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 100%;\n  font-family: ${props => props.theme.fonts.headings};\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  \n  .SquadronInput {\n  width: 60px;\n  height: 20px;\n  background: none;\n  border: solid 1px white;\n  border-radius: 4px;\n  color: white;\n  }\n  \n  .PASInput {\n   width: 120px;\n  height: 20px;\n   background: none;\n  border: solid 1px white;\n  border-radius: 4px;\n  color: white;\n  ;\n  }\n \n`;"]},"metadata":{},"sourceType":"module"}