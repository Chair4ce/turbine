{"ast":null,"code":"// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport var AETActionTypes;// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\n(function(AETActionTypes){AETActionTypes[\"FETCH_REQUEST\"]=\"@@AETs/FETCH_REQUEST\";AETActionTypes[\"FETCH_SUCCESS\"]=\"@@AETs/FETCH_SUCCESS\";AETActionTypes[\"FETCH_ERROR\"]=\"@@AETs/FETCH_ERROR\";})(AETActionTypes||(AETActionTypes={}));","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/store/AETs/types.ts"],"names":["AETActionTypes"],"mappings":"AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA,UAAYA,CAAAA,cAAZ,CAMA;AACA;UAPYA,c,EAAAA,c,yCAAAA,c,yCAAAA,c,wCAAAA,c,GAAAA,c","sourcesContent":["\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nimport AETModel from \"./AETModel\";\n\nexport enum AETActionTypes {\n    FETCH_REQUEST = '@@AETs/FETCH_REQUEST',\n    FETCH_SUCCESS = '@@AETs/FETCH_SUCCESS',\n    FETCH_ERROR = '@@AETs/FETCH_ERROR',\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface AETsState {\n    readonly loading: boolean;\n    readonly AETs: AETModel[];\n    readonly errors?: string;\n}\n"]},"metadata":{},"sourceType":"module"}