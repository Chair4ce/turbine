{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/chairforce/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-around;\\n  width: 100%;\\n  font-family: \", \";\\n  font-size: 16px;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n  \\n  .SquadronInput {\\n  width: 60px;\\n  height: 20px;\\n  background: none;\\n  border: solid 1px white;\\n  border-radius: 4px;\\n  color: white;\\n  }\\n  \\n  .PASInput {\\n   width: 120px;\\n  height: 20px;\\n   background: none;\\n  border: solid 1px white;\\n  border-radius: 4px;\\n  color: white;\\n  ;\\n  }\\n \\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport { connect } from \"react-redux\";\nimport { updateSquadronInputState } from \"../../../store/squadrons/actions\";\n\nclass AddSquadronBar extends React.Component {\n  render() {\n    const updateInputState = this.props.updateSquadronInputState;\n\n    function handleChange(e) {\n      console.log(e.toString());\n    }\n\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => {\n        handleChange(e.target);\n      },\n      className: \"SquadronInput\",\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"PASInput\",\n      placeholder: \"PAS Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = {\n  updateSquadronInputState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSquadronBar);\nconst Wrapper = styled('div')(_templateObject(), props => props.theme.fonts.headings);","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx"],"names":["React","styled","connect","updateSquadronInputState","AddSquadronBar","Component","render","updateInputState","props","handleChange","e","console","log","toString","target","mapStateToProps","mapDispatchToProps","Wrapper","theme","fonts","headings"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,kCAAvC;;AAaA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAAuD;AAC5CC,EAAAA,MAAP,GAAgB;AAAA,UACqBC,gBADrB,GACyC,KAAKC,KAD9C,CACLL,wBADK;;AAGZ,aAASM,YAAT,CAAsBC,CAAtB,EAA8B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,QAAF,EAAZ;AACH;;AACD,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,QAAQ,EAAGH,CAAD,IAAW;AAACD,QAAAA,YAAY,CAACC,CAAC,CAACI,MAAH,CAAZ;AAAuB,OADjD;AAEI,MAAA,SAAS,EAAE,eAFf;AAGA,MAAA,WAAW,EAAE,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AACI,MAAA,SAAS,EAAE,UADf;AAEI,MAAA,WAAW,EAAE,UAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAaH;;AApBkD;;AAuBvD,MAAMC,eAAe,GAAG,OAAO,EAAP,CAAxB;;AAIA,MAAMC,kBAAkB,GAAG;AACvBb,EAAAA;AADuB,CAA3B;AAIA,eAAeD,OAAO,CAClBa,eADkB,EAElBC,kBAFkB,CAAP,CAGbZ,cAHa,CAAf;AAKA,MAAMa,OAAO,GAAGhB,MAAM,CAAC,KAAD,CAAT,oBAKIO,KAAK,IAAIA,KAAK,CAACU,KAAN,CAAYC,KAAZ,CAAkBC,QAL/B,CAAb","sourcesContent":["import * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport {connect} from \"react-redux\";\nimport {updateSquadronInputState} from \"../../../store/squadrons/actions\";\n\ninterface PropsFromState {\n\n}\n\ninterface PropsFromDispatch {\n    updateSquadronInputState: typeof updateSquadronInputState;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch;\n\nclass AddSquadronBar extends React.Component<AllProps> {\n    public render() {\n        const {updateSquadronInputState: updateInputState} = this.props;\n\n        function handleChange(e: any) {\n            console.log(e.toString())\n        }\n        return (\n            <Wrapper>\n                <input\n                    onChange={(e: any)=> {handleChange(e.target)}}\n                    className={\"SquadronInput\"}\n                placeholder={\"Name\"}>\n                </input>\n                <input\n                    className={\"PASInput\"}\n                    placeholder={\"PAS Code\"}>\n                </input>\n            </Wrapper>\n        );\n    }\n}\n\nconst mapStateToProps = () => ({\n});\n\n\nconst mapDispatchToProps = {\n    updateSquadronInputState,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AddSquadronBar);\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  width: 100%;\n  font-family: ${props => props.theme.fonts.headings};\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  \n  .SquadronInput {\n  width: 60px;\n  height: 20px;\n  background: none;\n  border: solid 1px white;\n  border-radius: 4px;\n  color: white;\n  }\n  \n  .PASInput {\n   width: 120px;\n  height: 20px;\n   background: none;\n  border: solid 1px white;\n  border-radius: 4px;\n  color: white;\n  ;\n  }\n \n`;"]},"metadata":{},"sourceType":"module"}