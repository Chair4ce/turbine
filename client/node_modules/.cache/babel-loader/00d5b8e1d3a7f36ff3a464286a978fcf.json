{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/chairforce/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/chairforce/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-around;\\n  width: 100%;\\n  font-family: \", \";\\n  font-size: 16px;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n  \\n  .SquadronInput {\\n  width: 60px;\\n  height: 20px;\\n  background: none;\\n  border: solid 1px white;\\n  border-radius: 4px;\\n  color: white;\\n  }\\n  \\n  .PASInput {\\n   width: 120px;\\n  height: 20px;\\n   background: none;\\n  border: solid 1px white;\\n  border-radius: 4px;\\n  color: white;\\n  ;\\n  }\\n \\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport { connect } from \"react-redux\";\nimport { updateSquadronInputState } from \"../../../store/squadrons/actions\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport { useState } from \"react\";\n\nclass AddSquadronBar extends React.Component {\n  // constructor(StateProps: any) {\n  //     super(StateProps);\n  //     this.state = {\n  //         newSquadron: \"\",\n  //         newPASCode: \"\"\n  //     }\n  // }\n  render() {\n    const _this$props = this.props,\n          updateInputState = _this$props.updateSquadronInputState,\n          newInput = _this$props.newInput;\n\n    let _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        newSquadron = _useState2[0],\n        updateNewSquadronState = _useState2[1];\n\n    let _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newPASCode = _useState4[0],\n        updateNewPASCodeState = _useState4[1];\n\n    function handleNameChange(e) {\n      newSquadron = e.value;\n      console.log(newSquadron);\n    }\n\n    function handlePASCodeChange(e) {\n      newPASCode = e.value;\n      console.log(newPASCode);\n    }\n\n    function handleClick() {\n      updateInputState(new SquadronModel(newSquadron, newPASCode, \"\"));\n    }\n\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: e => {\n        handleNameChange(e.target);\n      },\n      className: \"SquadronInput\",\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: e => {\n        handlePASCodeChange(e.target);\n      },\n      className: \"PASInput\",\n      placeholder: \"PAS Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => handleClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"save\"));\n  }\n\n}\n\nconst mapStateToProps = ({\n  squadrons\n}) => ({\n  Input: squadrons.newInput,\n  post: squadrons.posting\n});\n\nconst mapDispatchToProps = {\n  updateSquadronInputState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSquadronBar);\nconst Wrapper = styled('div')(_templateObject(), props => props.theme.fonts.headings);","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx"],"names":["React","styled","connect","updateSquadronInputState","SquadronModel","useState","AddSquadronBar","Component","render","props","updateInputState","newInput","newSquadron","updateNewSquadronState","newPASCode","updateNewPASCodeState","handleNameChange","e","value","console","log","handlePASCodeChange","handleClick","target","mapStateToProps","squadrons","Input","post","posting","mapDispatchToProps","Wrapper","theme","fonts","headings"],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,wBAAR,QAAuC,kCAAvC;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAcA,MAAMC,cAAN,SAA6BN,KAAK,CAACO,SAAnC,CAAuD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACOC,EAAAA,MAAP,GAAgB;AAAA,wBACmD,KAAKC,KADxD;AAAA,UACqBC,gBADrB,eACLP,wBADK;AAAA,UACuCQ,QADvC,eACuCA,QADvC;;AAAA,oBAEgCN,QAAQ,EAFxC;AAAA;AAAA,QAEPO,WAFO;AAAA,QAEMC,sBAFN;;AAAA,qBAG8BR,QAAQ,EAHtC;AAAA;AAAA,QAGPS,UAHO;AAAA,QAGKC,qBAHL;;AAKZ,aAASC,gBAAT,CAA0BC,CAA1B,EAAkC;AAC9BL,MAAAA,WAAW,GAAGK,CAAC,CAACC,KAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACH;;AACD,aAASS,mBAAT,CAA6BJ,CAA7B,EAAqC;AACjCH,MAAAA,UAAU,GAAGG,CAAC,CAACC,KAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACH;;AAED,aAASQ,WAAT,GAAuB;AAChBZ,MAAAA,gBAAgB,CAAC,IAAIN,aAAJ,CAAkBQ,WAAlB,EAA+BE,UAA/B,EAA2C,EAA3C,CAAD,CAAhB;AACN;;AACD,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,QAAQ,EAAGG,CAAD,IAAW;AAACD,QAAAA,gBAAgB,CAACC,CAAC,CAACM,MAAH,CAAhB;AAA2B,OADrD;AAEI,MAAA,SAAS,EAAE,eAFf;AAGA,MAAA,WAAW,EAAE,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAMI;AACI,MAAA,QAAQ,EAAGN,CAAD,IAAW;AAACI,QAAAA,mBAAmB,CAACJ,CAAC,CAACM,MAAH,CAAnB;AAA8B,OADxD;AAEI,MAAA,SAAS,EAAE,UAFf;AAGI,MAAA,WAAW,EAAE,UAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,EAWI;AACA,MAAA,OAAO,EAAE,MAAMD,WAAW,EAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,CADJ;AAkBH;;AA3CkD;;AA8CvD,MAAME,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,MAAoC;AACxDC,EAAAA,KAAK,EAAED,SAAS,CAACd,QADuC;AAExDgB,EAAAA,IAAI,EAAEF,SAAS,CAACG;AAFwC,CAApC,CAAxB;;AAMA,MAAMC,kBAAkB,GAAG;AACvB1B,EAAAA;AADuB,CAA3B;AAIA,eAAeD,OAAO,CAClBsB,eADkB,EAElBK,kBAFkB,CAAP,CAGbvB,cAHa,CAAf;AAKA,MAAMwB,OAAO,GAAG7B,MAAM,CAAC,KAAD,CAAT,oBAKIQ,KAAK,IAAIA,KAAK,CAACsB,KAAN,CAAYC,KAAZ,CAAkBC,QAL/B,CAAb","sourcesContent":["import * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport {connect} from \"react-redux\";\nimport {updateSquadronInputState} from \"../../../store/squadrons/actions\";\nimport {ApplicationState} from \"../../../store\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport {useState} from \"react\";\n\ninterface PropsFromState {\nnewInput: SquadronModel;\nposting: boolean;\n}\n\ninterface PropsFromDispatch {\n    updateSquadronInputState: typeof updateSquadronInputState;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromState & PropsFromDispatch;\n\nclass AddSquadronBar extends React.Component<AllProps> {\n    // constructor(StateProps: any) {\n    //     super(StateProps);\n    //     this.state = {\n    //         newSquadron: \"\",\n    //         newPASCode: \"\"\n    //     }\n    // }\n    public render() {\n        const {updateSquadronInputState: updateInputState, newInput} = this.props;\n        let [newSquadron, updateNewSquadronState] = useState();\n        let [newPASCode, updateNewPASCodeState] = useState();\n\n        function handleNameChange(e: any) {\n            newSquadron = e.value;\n            console.log(newSquadron);\n        }\n        function handlePASCodeChange(e: any) {\n            newPASCode = e.value;\n            console.log(newPASCode);\n        }\n\n        function handleClick() {\n               updateInputState(new SquadronModel(newSquadron, newPASCode, \"\"))\n        }\n        return (\n            <Wrapper>\n                <input\n                    onChange={(e: any)=> {handleNameChange(e.target)}}\n                    className={\"SquadronInput\"}\n                placeholder={\"Name\"}>\n                </input>\n                <input\n                    onChange={(e: any)=> {handlePASCodeChange(e.target)}}\n                    className={\"PASInput\"}\n                    placeholder={\"PAS Code\"}>\n                </input>\n                <button\n                onClick={() => handleClick()}>\n                    save\n                </button>\n            </Wrapper>\n        );\n    }\n}\n\nconst mapStateToProps = ({squadrons}: ApplicationState) => ({\n    Input: squadrons.newInput,\n    post: squadrons.posting,\n});\n\n\nconst mapDispatchToProps = {\n    updateSquadronInputState,\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AddSquadronBar);\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  width: 100%;\n  font-family: ${props => props.theme.fonts.headings};\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  \n  .SquadronInput {\n  width: 60px;\n  height: 20px;\n  background: none;\n  border: solid 1px white;\n  border-radius: 4px;\n  color: white;\n  }\n  \n  .PASInput {\n   width: 120px;\n  height: 20px;\n   background: none;\n  border: solid 1px white;\n  border-radius: 4px;\n  color: white;\n  ;\n  }\n \n`;"]},"metadata":{},"sourceType":"module"}