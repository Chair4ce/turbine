{"ast":null,"code":"import { action } from 'typesafe-actions';\nimport { SquadronActionTypes } from './types';\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const squadronsFetchRequest = () => action(SquadronActionTypes.FETCH_REQUEST); // Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\n\nexport const squadronsFetchSuccess = payload => action(SquadronActionTypes.FETCH_SUCCESS, payload);\nexport const squadronsFetchError = message => action(SquadronActionTypes.FETCH_ERROR, message);","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/store/squadrons/actions.ts"],"names":["action","SquadronActionTypes","squadronsFetchRequest","FETCH_REQUEST","squadronsFetchSuccess","payload","FETCH_SUCCESS","squadronsFetchError","message","FETCH_ERROR"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,SAASC,mBAAT,QAAmC,SAAnC;AAGA;AACA;AACA;AACA,OAAO,MAAMC,qBAAqB,GAAG,MAAMF,MAAM,CAACC,mBAAmB,CAACE,aAArB,CAA1C,C,CAEP;AACA;;AACA,OAAO,MAAMC,qBAAqB,GAAIC,OAAD,IAA8BL,MAAM,CAACC,mBAAmB,CAACK,aAArB,EAAoCD,OAApC,CAAlE;AACP,OAAO,MAAME,mBAAmB,GAAIC,OAAD,IAAqBR,MAAM,CAACC,mBAAmB,CAACQ,WAArB,EAAkCD,OAAlC,CAAvD","sourcesContent":["import { action } from 'typesafe-actions';\nimport { SquadronActionTypes} from './types';\nimport SquadronModel from \"./SquadronModel\";\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const squadronsFetchRequest = () => action(SquadronActionTypes.FETCH_REQUEST);\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const squadronsFetchSuccess = (payload: SquadronModel[]) => action(SquadronActionTypes.FETCH_SUCCESS, payload);\nexport const squadronsFetchError = (message: string) => action(SquadronActionTypes.FETCH_ERROR, message);\n"]},"metadata":{},"sourceType":"module"}