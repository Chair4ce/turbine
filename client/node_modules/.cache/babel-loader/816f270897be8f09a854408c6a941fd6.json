{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ridley/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _regeneratorRuntime from\"/Users/ridley/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ridley/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ridley/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around;\\n  width: 100%;\\n  font-family: \",\";\\n  font-size: 16px;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n  \\n  .SquadronInput {\\n  width: 60px;\\n  height: 20px;\\n  background: none;\\n  border: solid 1px white;\\n  border-radius: 4px;\\n  color: white;\\n  }\\n  \\n  .PASInput {\\n   width: 120px;\\n  height: 20px;\\n   background: none;\\n  border: solid 1px white;\\n  border-radius: 4px;\\n  color: white;\\n  ;\\n  }\\n \\n\"]);_templateObject=function _templateObject(){return data;};return data;}import*as React from'react';import styled from\"../../../utils/styled\";import{connect}from\"react-redux\";import{showSquadronInput,squadronPostRequest,squadronsFetchRequest}from\"../../../store/squadrons/actions\";import SquadronModel from\"../../../store/squadrons/SquadronModel\";import{useState}from\"react\";import{postNewSquadron}from\"../../../store/squadrons/sagas\";var AddSquadronBar=function AddSquadronBar(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),newSqName=_useState2[0],updateSqName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newSqPAS=_useState4[0],updatePAS=_useState4[1];function handleClick(){return _handleClick.apply(this,arguments);}function _handleClick(){_handleClick=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return postNewSquadron(new SquadronModel(newSqName,newSqPAS));case 2:_context.next=4;return props.fetchSquadrons();case 4:props.showInput();case 5:case\"end\":return _context.stop();}}},_callee);}));return _handleClick.apply(this,arguments);}return React.createElement(Wrapper,null,React.createElement(\"input\",{onChange:function onChange(e){return updateSqName(e.target.value);},className:\"SquadronInput\",placeholder:\"Name\"}),React.createElement(\"input\",{onChange:function onChange(e){return updatePAS(e.target.value);},className:\"PASInput\",placeholder:\"PAS Code\"}),React.createElement(\"button\",{onClick:function onClick(){handleClick();}},\"save\"));};var mapStateToProps=function mapStateToProps(_ref){var squadrons=_ref.squadrons;return{newSquadron:squadrons.newInput,post:squadrons.posting};};var mapDispatchToProps={postNewSquadron:squadronPostRequest,fetchSquadrons:squadronsFetchRequest,showInput:showSquadronInput};export var StyledAddSquadronBar=connect(mapStateToProps,mapDispatchToProps)(AddSquadronBar);var Wrapper=styled('div')(_templateObject(),function(props){return props.theme.fonts.headings;});","map":{"version":3,"sources":["/Users/ridley/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx"],"names":["React","styled","connect","showSquadronInput","squadronPostRequest","squadronsFetchRequest","SquadronModel","useState","postNewSquadron","AddSquadronBar","props","newSqName","updateSqName","newSqPAS","updatePAS","handleClick","fetchSquadrons","showInput","e","target","value","mapStateToProps","squadrons","newSquadron","newInput","post","posting","mapDispatchToProps","StyledAddSquadronBar","Wrapper","theme","fonts","headings"],"mappings":"ivCAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OACIC,iBADJ,CAEIC,mBAFJ,CAGIC,qBAHJ,KAKO,kCALP,CAOA,MAAOC,CAAAA,aAAP,KAA0B,wCAA1B,CACA,OAAQC,QAAR,KAAuB,OAAvB,CACA,OAAQC,eAAR,KAA8B,gCAA9B,CAYA,GAAMC,CAAAA,cAAkC,CAAG,QAArCA,CAAAA,cAAqC,CAAAC,KAAK,CAAI,eACdH,QAAQ,CAAC,EAAD,CADM,wCACzCI,SADyC,eAC9BC,YAD8B,8BAElBL,QAAQ,CAAC,EAAD,CAFU,yCAEzCM,QAFyC,eAE/BC,SAF+B,uBAIjCC,CAAAA,WAJiC,2IAIhD,yJACUP,CAAAA,eAAe,CAAC,GAAIF,CAAAA,aAAJ,CAAkBK,SAAlB,CAA6BE,QAA7B,CAAD,CADzB,8BAEUH,CAAAA,KAAK,CAACM,cAAN,EAFV,QAGIN,KAAK,CAACO,SAAN,GAHJ,sDAJgD,8CAUhD,MACI,qBAAC,OAAD,MACI,6BACI,QAAQ,CAAE,kBAACC,CAAD,QAAYN,CAAAA,YAAY,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxB,EADd,CAEI,SAAS,CAAE,eAFf,CAGI,WAAW,CAAE,MAHjB,EADJ,CAMI,6BACI,QAAQ,CAAE,kBAACF,CAAD,QAAYJ,CAAAA,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAArB,EADd,CAEI,SAAS,CAAE,UAFf,CAGI,WAAW,CAAE,UAHjB,EANJ,CAWI,8BACI,OAAO,CAAE,kBAAM,CACXL,WAAW,GACd,CAHL,SAXJ,CADJ,CAqBH,CA/BD,CAiCA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,UAAEC,CAAAA,SAAF,MAAEA,SAAF,OAAoC,CACxDC,WAAW,CAAED,SAAS,CAACE,QADiC,CAExDC,IAAI,CAAEH,SAAS,CAACI,OAFwC,CAApC,EAAxB,CAMA,GAAMC,CAAAA,kBAAkB,CAAG,CACvBnB,eAAe,CAAEJ,mBADM,CAEvBY,cAAc,CAAEX,qBAFO,CAGvBY,SAAS,CAAEd,iBAHY,CAA3B,CAMA,MAAO,IAAMyB,CAAAA,oBAAoB,CAAG1B,OAAO,CACvCmB,eADuC,CAEvCM,kBAFuC,CAAP,CAGlClB,cAHkC,CAA7B,CAKP,GAAMoB,CAAAA,OAAO,CAAG5B,MAAM,CAAC,KAAD,CAAT,mBAKI,SAAAS,KAAK,QAAIA,CAAAA,KAAK,CAACoB,KAAN,CAAYC,KAAZ,CAAkBC,QAAtB,EALT,CAAb","sourcesContent":["import * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport {connect} from \"react-redux\";\nimport {\n    showSquadronInput,\n    squadronPostRequest,\n    squadronsFetchRequest,\n    updateSquadronInputState\n} from \"../../../store/squadrons/actions\";\nimport {ApplicationState} from \"../../../store\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport {useState} from \"react\";\nimport {postNewSquadron} from \"../../../store/squadrons/sagas\";\n\ninterface Props {\n}\n\ninterface PropsFromDispatch {\n    fetchSquadrons: typeof squadronsFetchRequest;\n    showInput: typeof showSquadronInput;\n}\n\ntype AllProps = Props & PropsFromDispatch;\n\nconst AddSquadronBar: React.FC<AllProps> = props => {\n    const [newSqName, updateSqName] = useState(\"\");\n    const [newSqPAS, updatePAS] = useState(\"\");\n\n    async function handleClick() {\n        await postNewSquadron(new SquadronModel(newSqName, newSqPAS));\n        await props.fetchSquadrons();\n        props.showInput();\n    }\n\n    return (\n        <Wrapper>\n            <input\n                onChange={(e: any) => updateSqName(e.target.value)}\n                className={\"SquadronInput\"}\n                placeholder={\"Name\"}>\n            </input>\n            <input\n                onChange={(e: any) => updatePAS(e.target.value)}\n                className={\"PASInput\"}\n                placeholder={\"PAS Code\"}>\n            </input>\n            <button\n                onClick={() => {\n                    handleClick()\n                }}\n            >\n                save\n            </button>\n        </Wrapper>\n    )\n};\n\nconst mapStateToProps = ({squadrons}: ApplicationState) => ({\n    newSquadron: squadrons.newInput,\n    post: squadrons.posting,\n});\n\n\nconst mapDispatchToProps = {\n    postNewSquadron: squadronPostRequest,\n    fetchSquadrons: squadronsFetchRequest,\n    showInput: showSquadronInput,\n};\n\nexport const StyledAddSquadronBar = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AddSquadronBar);\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 100%;\n  font-family: ${props => props.theme.fonts.headings};\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  \n  .SquadronInput {\n  width: 60px;\n  height: 20px;\n  background: none;\n  border: solid 1px white;\n  border-radius: 4px;\n  color: white;\n  }\n  \n  .PASInput {\n   width: 120px;\n  height: 20px;\n   background: none;\n  border: solid 1px white;\n  border-radius: 4px;\n  color: white;\n  ;\n  }\n \n`;"]},"metadata":{},"sourceType":"module"}