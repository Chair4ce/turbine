{"ast":null,"code":"// This file holds our state type, as well as any other types related to this Redux store.\n// Response object for GET /members\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport var MemberActionTypes;// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\n(function(MemberActionTypes){MemberActionTypes[\"FETCH_REQUEST\"]=\"@@members/FETCH_REQUEST\";MemberActionTypes[\"FETCH_SUCCESS\"]=\"@@members/FETCH_SUCCESS\";MemberActionTypes[\"FETCH_ERROR\"]=\"@@members/FETCH_ERROR\";MemberActionTypes[\"SELECT_MEMBER\"]=\"@@members/SELECT_MEMBER\";MemberActionTypes[\"SELECTED\"]=\"@@members/SELECTED\";})(MemberActionTypes||(MemberActionTypes={}));","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/store/members/types.ts"],"names":["MemberActionTypes"],"mappings":"AAAA;AAEA;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,UAAYA,CAAAA,iBAAZ,CAQA;AACA;UATYA,iB,EAAAA,iB,4CAAAA,iB,4CAAAA,iB,wCAAAA,iB,4CAAAA,iB,qCAAAA,iB,GAAAA,iB","sourcesContent":["// This file holds our state type, as well as any other types related to this Redux store.\n\n// Response object for GET /members\n\nimport MemberModel from \"./MemberModel\";\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\nexport type ApiResponse = Record<string, any>;\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum MemberActionTypes {\n    FETCH_REQUEST = '@@members/FETCH_REQUEST',\n    FETCH_SUCCESS = '@@members/FETCH_SUCCESS',\n    FETCH_ERROR = '@@members/FETCH_ERROR',\n    SELECT_MEMBER = '@@members/SELECT_MEMBER',\n    SELECTED = '@@members/SELECTED',\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface MembersState {\n    readonly loading: boolean;\n    readonly data: MemberModel[];\n    readonly errors?: string;\n}\n"]},"metadata":{},"sourceType":"module"}