{"ast":null,"code":"import{action}from'typesafe-actions';import{AETActionTypes}from'./types';// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport var AETsFetchRequest=function AETsFetchRequest(){return action(AETActionTypes.FETCH_REQUEST);};// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport var AETsFetchSuccess=function AETsFetchSuccess(payload){return action(AETActionTypes.FETCH_SUCCESS,payload);};export var AETsFetchError=function AETsFetchError(message){return action(AETActionTypes.FETCH_ERROR,message);};","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/store/AETs/actions.ts"],"names":["action","AETActionTypes","AETsFetchRequest","FETCH_REQUEST","AETsFetchSuccess","payload","FETCH_SUCCESS","AETsFetchError","message","FETCH_ERROR"],"mappings":"AAAA,OAASA,MAAT,KAAuB,kBAAvB,CACA,OAASC,cAAT,KAA8B,SAA9B,CAGA;AACA;AACA;AACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAMF,CAAAA,MAAM,CAACC,cAAc,CAACE,aAAhB,CAAZ,EAAzB,CAEP;AACA;AACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,OAAD,QAAyBL,CAAAA,MAAM,CAACC,cAAc,CAACK,aAAhB,CAA+BD,OAA/B,CAA/B,EAAzB,CACP,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,OAAD,QAAqBR,CAAAA,MAAM,CAACC,cAAc,CAACQ,WAAhB,CAA6BD,OAA7B,CAA3B,EAAvB","sourcesContent":["import { action } from 'typesafe-actions';\nimport { AETActionTypes} from './types';\nimport AETModel from \"./AETModel\";\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const AETsFetchRequest = () => action(AETActionTypes.FETCH_REQUEST);\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const AETsFetchSuccess = (payload: AETModel[]) => action(AETActionTypes.FETCH_SUCCESS, payload);\nexport const AETsFetchError = (message: string) => action(AETActionTypes.FETCH_ERROR, message);\n"]},"metadata":{},"sourceType":"module"}