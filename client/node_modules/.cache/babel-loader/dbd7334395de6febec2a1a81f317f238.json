{"ast":null,"code":"import _defineProperty from\"/Users/ridley/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(source,true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(source).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{LayoutActionTypes}from'./types';// Type-safe initialState!\nexport var initialState={theme:'dark'};// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nvar reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case LayoutActionTypes.SET_THEME:{return _objectSpread({},state,{theme:action.payload});}default:{return state;}}};// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport{reducer as layoutReducer};","map":{"version":3,"sources":["/Users/ridley/workspace/turbine/client/src/store/layout/reducer.ts"],"names":["LayoutActionTypes","initialState","theme","reducer","state","action","type","SET_THEME","payload","layoutReducer"],"mappings":"26BACA,OAAsBA,iBAAtB,KAA+C,SAA/C,CAEA;AACA,MAAO,IAAMC,CAAAA,YAAyB,CAAG,CACrCC,KAAK,CAAE,MAD8B,CAAlC,CAIP;AACA;AACA,GAAMC,CAAAA,OAA6B,CAAG,QAAhCA,CAAAA,OAAgC,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBH,YAAyB,IAAXI,CAAAA,MAAW,2CACpE,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,iBAAiB,CAACO,SAAvB,CAAkC,CAC9B,wBAAYH,KAAZ,EAAmBF,KAAK,CAAEG,MAAM,CAACG,OAAjC,GACH,CACD,QAAS,CACL,MAAOJ,CAAAA,KAAP,CACH,CANL,CAQH,CATD,CAWA;AACA;AACA,OAASD,OAAO,GAAIM,CAAAA,aAApB","sourcesContent":["import { Reducer } from 'redux';\nimport { LayoutState, LayoutActionTypes } from './types';\n\n// Type-safe initialState!\nexport const initialState: LayoutState = {\n    theme: 'dark',\n};\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<LayoutState> = (state = initialState, action) => {\n    switch (action.type) {\n        case LayoutActionTypes.SET_THEME: {\n            return { ...state, theme: action.payload };\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as layoutReducer };\n"]},"metadata":{},"sourceType":"module"}