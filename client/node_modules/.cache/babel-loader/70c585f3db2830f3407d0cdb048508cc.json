{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/ridley/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/ridley/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ridley/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  align-items: center;\\n  width: 100%;\\n  height: 45px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n\\n  width: 100%;\\n  font-family: \", \";\\n  font-size: 16px;\\n  -webkit-animation: \", \" 1s;\\n  margin-top: 5px;\\n  \\n  .title {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: center;\\n  text-align: center;\\n  width: 100%;\\n  padding: 5px;\\n  }\\n  \\n  .validText {\\n  color: cornflowerblue;\\n  }\\n  \\n  .SquadronInput {\\n  text-align: center;\\n  outline: none;\\n  width: 80%;\\n  height: 20px;\\n  background: rgba(33,33,33,0.69);\\n  border: solid 1px rgba(95,95,95,0.1);\\n  border-radius: 4px;\\n  color: rgba(211,211,211,0.89);\\n    :hover {\\n  background: rgba(33,33,33,0.42);\\n  }\\n  }\\n  \\n  .PASInput {\\n  text-align: center;\\n  outline: none;\\n   width: 80%;\\n  height: 20px;\\n    background: rgba(33,33,33,0.69);\\n  border: solid 1px rgba(95,95,95,0.1);\\n  border-radius: 4px;\\n  color: #d3d3d3;\\n  :hover {\\n  background: rgba(33,33,33,0.42);\\n  }\\n  }\\n  \\n  .Btn {\\n  background: \", \";\\n  color: \", \";\\n  text-align: center;\\n  outline: none;\\n  cursor: pointer;\\n  width: 100%;\\n  height: 25px;\\n  margin: 5px;\\n  border: none;\\n  border-radius: 4px;\\n  transition: all 0.3s ease 0s;\\n  \\n  }\\n  \\n  .btn-box {\\n   display: flex;\\n  flex-direction: row;\\n  justify-content: space-around;\\n  width: 100%;\\n  }\\n  \\n  .hvr-grow {\\n    display: inline-block;\\n    vertical-align: middle;\\n    transform: translateZ(0);\\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0);\\n    backface-visibility: hidden;\\n    -moz-osx-font-smoothing: grayscale;\\n    transition-duration: 0.3s;\\n    transition-property: transform;\\n}\\n\\n.hvr-grow:hover,\\n.hvr-grow:focus,\\n.hvr-grow:active {\\n    transform: scale(1.1);\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport { connect } from \"react-redux\";\nimport { showSquadronInput, squadronPostRequest, squadronsFetchRequest } from \"../../../store/squadrons/actions\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport { useState } from \"react\";\nimport { postNewSquadron } from \"../../../store/squadrons/sagas\";\nimport { EaseIn } from \"../../animations/transitions\";\n\nconst AddSquadronBar = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        newSqName = _useState2[0],\n        updateSqName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newSqPAS = _useState4[0],\n        updatePAS = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        validInput = _useState6[0],\n        updateValidInput = _useState6[1];\n\n  async function handleClick() {\n    if (newSqName.length > 0 && newSqPAS.length > 0) {\n      updateValidInput(\"\");\n      await postNewSquadron(new SquadronModel(newSqName.toUpperCase(), newSqPAS.toUpperCase()));\n      await props.fetchSquadrons();\n      await toggleForm();\n    } else {\n      updateValidInput(\"Please fill in both fields\");\n    }\n  }\n\n  function toggleForm() {\n    props.showInput();\n  }\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Enter New Squadron\"), React.createElement(InputGrp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: e => updateSqName(e.target.value),\n    className: \"SquadronInput\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onChange: e => updatePAS(e.target.value),\n    className: \"PASInput\",\n    placeholder: \"PAS Code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"btn-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"Btn hvr-grow\",\n    onClick: () => {\n      handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"SAVE\"), React.createElement(\"button\", {\n    className: \"Btn hvr-grow\",\n    onClick: () => {\n      toggleForm();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"CANCEL\")), validInput.length > 0 && React.createElement(\"span\", {\n    className: \"validText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, validInput));\n};\n\nconst mapStateToProps = ({\n  squadrons\n}) => ({\n  newSquadron: squadrons.newInput,\n  post: squadrons.posting\n});\n\nconst mapDispatchToProps = {\n  postNewSquadron: squadronPostRequest,\n  fetchSquadrons: squadronsFetchRequest,\n  showInput: showSquadronInput\n};\nexport const StyledAddSquadronBar = connect(mapStateToProps, mapDispatchToProps)(AddSquadronBar);\nconst Wrapper = styled('div')(_templateObject(), props => props.theme.fonts.headings, EaseIn, props => props.theme.colors.background, props => props.theme.colors.brand);\nconst InputGrp = styled('div')(_templateObject2());","map":{"version":3,"sources":["/Users/ridley/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx"],"names":["React","styled","connect","showSquadronInput","squadronPostRequest","squadronsFetchRequest","SquadronModel","useState","postNewSquadron","EaseIn","AddSquadronBar","props","newSqName","updateSqName","newSqPAS","updatePAS","validInput","updateValidInput","handleClick","length","toUpperCase","fetchSquadrons","toggleForm","showInput","e","target","value","mapStateToProps","squadrons","newSquadron","newInput","post","posting","mapDispatchToProps","StyledAddSquadronBar","Wrapper","theme","fonts","headings","colors","background","brand","InputGrp"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport {connect} from \"react-redux\";\n\nimport {\n    showSquadronInput,\n    squadronPostRequest,\n    squadronsFetchRequest,\n} from \"../../../store/squadrons/actions\";\nimport {ApplicationState} from \"../../../store\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport {useState} from \"react\";\nimport {postNewSquadron} from \"../../../store/squadrons/sagas\";\nimport {EaseIn} from \"../../animations/transitions\";\n\ninterface Props {\n}\n\ninterface PropsFromDispatch {\n    fetchSquadrons: typeof squadronsFetchRequest;\n    showInput: typeof showSquadronInput;\n}\n\ntype AllProps = Props & PropsFromDispatch;\n\nconst AddSquadronBar: React.FC<AllProps> = props => {\n    const [newSqName, updateSqName] = useState(\"\");\n    const [newSqPAS, updatePAS] = useState(\"\");\n    const [validInput, updateValidInput] = useState(\"\");\n\n    async function handleClick() {\n\n        if (newSqName.length > 0 && newSqPAS.length > 0) {\n            updateValidInput(\"\");\n        await postNewSquadron(new SquadronModel(newSqName.toUpperCase(), newSqPAS.toUpperCase()));\n        await props.fetchSquadrons();\n        await toggleForm();\n        } else {\n            updateValidInput(\"Please fill in both fields\")\n        }\n\n    }\n\n    function toggleForm() {\n        props.showInput();\n    }\n\n    return (\n        <Wrapper>\n            <span\n            className={\"title\"}>\n                Enter New Squadron\n            </span>\n            <InputGrp>\n            <input\n                onChange={(e: any) => updateSqName(e.target.value)}\n                className={\"SquadronInput\"}\n                placeholder={\"Name\"}>\n            </input>\n            <input\n                onChange={(e: any) => updatePAS(e.target.value)}\n                className={\"PASInput\"}\n                placeholder={\"PAS Code\"}>\n            </input>\n            </InputGrp>\n            <div\n                className={\"btn-box\"}>\n                    <button\n                        className={\"Btn hvr-grow\"}\n                        onClick={() => {\n                            handleClick();\n                        }}\n                    >\n                        SAVE\n                    </button>\n                <button\n                    className={\"Btn hvr-grow\"}\n                    onClick={() => {\n                        toggleForm();\n                    }}\n                >\n                    CANCEL\n                </button>\n\n            </div>\n            {validInput.length > 0 && (<span\n            className={\"validText\"}>\n                    {validInput}\n                </span>)}\n        </Wrapper>\n    )\n};\n\nconst mapStateToProps = ({squadrons}: ApplicationState) => ({\n    newSquadron: squadrons.newInput,\n    post: squadrons.posting,\n});\n\n\nconst mapDispatchToProps = {\n    postNewSquadron: squadronPostRequest,\n    fetchSquadrons: squadronsFetchRequest,\n    showInput: showSquadronInput,\n};\n\nexport const StyledAddSquadronBar = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AddSquadronBar);\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  width: 100%;\n  font-family: ${props => props.theme.fonts.headings};\n  font-size: 16px;\n  -webkit-animation: ${EaseIn} 1s;\n  margin-top: 5px;\n  \n  .title {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  padding: 5px;\n  }\n  \n  .validText {\n  color: cornflowerblue;\n  }\n  \n  .SquadronInput {\n  text-align: center;\n  outline: none;\n  width: 80%;\n  height: 20px;\n  background: rgba(33,33,33,0.69);\n  border: solid 1px rgba(95,95,95,0.1);\n  border-radius: 4px;\n  color: rgba(211,211,211,0.89);\n    :hover {\n  background: rgba(33,33,33,0.42);\n  }\n  }\n  \n  .PASInput {\n  text-align: center;\n  outline: none;\n   width: 80%;\n  height: 20px;\n    background: rgba(33,33,33,0.69);\n  border: solid 1px rgba(95,95,95,0.1);\n  border-radius: 4px;\n  color: #d3d3d3;\n  :hover {\n  background: rgba(33,33,33,0.42);\n  }\n  }\n  \n  .Btn {\n  background: ${props => props.theme.colors.background};\n  color: ${props => props.theme.colors.brand};\n  text-align: center;\n  outline: none;\n  cursor: pointer;\n  width: 100%;\n  height: 25px;\n  margin: 5px;\n  border: none;\n  border-radius: 4px;\n  transition: all 0.3s ease 0s;\n  \n  }\n  \n  .btn-box {\n   display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  width: 100%;\n  }\n  \n  .hvr-grow {\n    display: inline-block;\n    vertical-align: middle;\n    transform: translateZ(0);\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0);\n    backface-visibility: hidden;\n    -moz-osx-font-smoothing: grayscale;\n    transition-duration: 0.3s;\n    transition-property: transform;\n}\n\n.hvr-grow:hover,\n.hvr-grow:focus,\n.hvr-grow:active {\n    transform: scale(1.1);\n}\n`;\n\nconst InputGrp = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 45px;\n`;"]},"metadata":{},"sourceType":"module"}