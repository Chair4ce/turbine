{"ast":null,"code":"import{action}from'typesafe-actions';import{SquadronActionTypes}from'./types';// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport var squadronsFetchRequest=function squadronsFetchRequest(){return action(SquadronActionTypes.FETCH_REQUEST);};// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport var squadronsFetchSuccess=function squadronsFetchSuccess(payload){return action(SquadronActionTypes.FETCH_SUCCESS,payload);};export var squadronsFetchError=function squadronsFetchError(message){return action(SquadronActionTypes.FETCH_ERROR,message);};","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/store/squadrons/actions.ts"],"names":["action","SquadronActionTypes","squadronsFetchRequest","FETCH_REQUEST","squadronsFetchSuccess","payload","FETCH_SUCCESS","squadronsFetchError","message","FETCH_ERROR"],"mappings":"AAAA,OAASA,MAAT,KAAuB,kBAAvB,CACA,OAASC,mBAAT,KAAmC,SAAnC,CAGA;AACA;AACA;AACA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAMF,CAAAA,MAAM,CAACC,mBAAmB,CAACE,aAArB,CAAZ,EAA9B,CAEP;AACA;AACA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,OAAD,QAA8BL,CAAAA,MAAM,CAACC,mBAAmB,CAACK,aAArB,CAAoCD,OAApC,CAApC,EAA9B,CACP,MAAO,IAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,OAAD,QAAqBR,CAAAA,MAAM,CAACC,mBAAmB,CAACQ,WAArB,CAAkCD,OAAlC,CAA3B,EAA5B","sourcesContent":["import { action } from 'typesafe-actions';\nimport { SquadronActionTypes} from './types';\nimport SquadronModel from \"./SquadronModel\";\n\n// Here we use the `action` helper function provided by `typesafe-actions`.\n// This library provides really useful helpers for writing Redux actions in a type-safe manner.\n// For more info: https://github.com/piotrwitek/typesafe-actions\nexport const squadronsFetchRequest = () => action(SquadronActionTypes.FETCH_REQUEST);\n\n// Remember, you can also pass parameters into an action creator. Make sure to\n// type them properly as well.\nexport const squadronsFetchSuccess = (payload: SquadronModel[]) => action(SquadronActionTypes.FETCH_SUCCESS, payload);\nexport const squadronsFetchError = (message: string) => action(SquadronActionTypes.FETCH_ERROR, message);\n"]},"metadata":{},"sourceType":"module"}