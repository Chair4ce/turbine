{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/ridley/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/ridley/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ridley/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n display: flex;\\n  flex-direction: row;\\n  justify-content: space-around;\\n  width: 100%;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-around;\\n  width: 100%;\\n  font-family: \", \";\\n  font-size: 16px;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n  -webkit-animation: \", \" .5s;\\n  \\n  .SquadronInput {\\n  outline: none;\\n  width: 60px;\\n  height: 20px;\\n  background: none;\\n  border: solid 1px \", \";\\n  border-radius: 4px;\\n  color: white;\\n  }\\n  \\n  .PASInput {\\n  outline: none;\\n   width: 120px;\\n  height: 20px;\\n   background: none;\\n  border: solid 1px \", \";\\n  border-radius: 4px;\\n  color: white;\\n  }\\n  \\n  .SaveBtn {\\n  text-align: center;\\n  color: darkgray;\\n  outline: none;\\n  cursor: pointer;\\n  width: 55px;\\n  height: 25px;\\n  border: none;\\n  background: none;\\n  border-radius: 50%;\\n\\n  }\\n \\n body{\\n  //background:lightblue;\\n  text-align:center;\\n  box-sizing:border-box;\\n  font-family:\\\"Lato\\\",Sans-serif;\\n/*   position:relative; */\\n}\\n\\n.box{\\ndisplay: flex;\\nflex-direction: row;\\njustify-content: center;\\n  position: relative;\\n  top:50%;\\n  margin: 20px;\\n  a {\\n  pointer-events: none;\\n  }\\n}\\n\\n//.a{\\n//height: 100%;\\n//width: 100%;\\n//}\\n\\n.btn:link,\\n.btn:visited{\\n  text-decoration: none;\\n  text-transform:uppercase;\\n  position:relative;\\n  top:0;\\n  left:0;\\n  padding:2px 2px;\\n  border-radius:100px;\\n  display:inline-block;\\n  transition: all .5s;\\n}\\n\\n.btn-white{\\nfont-size: 16px;\\n  color: \", \";\\n}\\n\\n.btn:hover{\\n   box-shadow:0px 10px 10px rgba(0,0,0,0.5);\\n   transform : translateY(-3px);\\n}\\n\\n.btn:active{\\n  box-shadow:0px 5px 10px rgba(0,0,0,0.2);\\n  transform:translateY(-1px);\\n}\\n\\n.btn-bottom-animation-1{\\n  animation:comeFromBottom 1s ease-out .8s;\\n}\\n\\n.btn::after{\\n  content:\\\"\\\";\\n  text-decoration: none;\\n  text-transform:uppercase;\\n  position:absolute;\\n  width:100%;\\n  height:100%;\\n  top:0;\\n  left:0;\\n  border-radius:100px;\\n  display:inline-block;\\n  z-index:-1;\\n  transition: all .5s;\\n}\\n\\n.btn-white::after {\\n    background: \", \";\\n}\\n\\n.btn-animation-1:hover::after {\\n    transform: scaleX(1.4) scaleY(1.6);\\n    opacity: 0;\\n}\\n\\n@keyframes comeFromBottom{\\n  0%{\\n    opacity:0;\\n    transform:translateY(40px);\\n  } \\n  100%{\\n    opacity:1;\\n    transform:translateY(0);\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport { connect } from \"react-redux\";\nimport { showSquadronInput, squadronPostRequest, squadronsFetchRequest } from \"../../../store/squadrons/actions\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport { useState } from \"react\";\nimport { postNewSquadron } from \"../../../store/squadrons/sagas\";\nimport { EaseIn } from \"../../animations/transitions\";\n\nconst AddSquadronBar = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        newSqName = _useState2[0],\n        updateSqName = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newSqPAS = _useState4[0],\n        updatePAS = _useState4[1];\n\n  async function handleClick() {\n    await postNewSquadron(new SquadronModel(newSqName, newSqPAS));\n    await props.fetchSquadrons();\n    props.showInput();\n  }\n\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(InputGrp, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: e => updateSqName(e.target.value),\n    className: \"SquadronInput\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    onChange: e => updatePAS(e.target.value),\n    className: \"PASInput\",\n    placeholder: \"PAS Code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"\",\n    className: \"btn btn-white btn-animation-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-white btn-animation-1\",\n    onClick: () => {\n      handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"btn-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"SAVE\")))));\n};\n\nconst mapStateToProps = ({\n  squadrons\n}) => ({\n  newSquadron: squadrons.newInput,\n  post: squadrons.posting\n});\n\nconst mapDispatchToProps = {\n  postNewSquadron: squadronPostRequest,\n  fetchSquadrons: squadronsFetchRequest,\n  showInput: showSquadronInput\n};\nexport const StyledAddSquadronBar = connect(mapStateToProps, mapDispatchToProps)(AddSquadronBar);\nconst Wrapper = styled('div')(_templateObject(), props => props.theme.fonts.headings, EaseIn, props => props.theme.colors.textLight, props => props.theme.colors.textLight, props => props.theme.colors.brand, props => props.theme.colors.background);\nconst InputGrp = styled('div')(_templateObject2());","map":{"version":3,"sources":["/Users/ridley/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx"],"names":["React","styled","connect","showSquadronInput","squadronPostRequest","squadronsFetchRequest","SquadronModel","useState","postNewSquadron","EaseIn","AddSquadronBar","props","newSqName","updateSqName","newSqPAS","updatePAS","handleClick","fetchSquadrons","showInput","e","target","value","mapStateToProps","squadrons","newSquadron","newInput","post","posting","mapDispatchToProps","StyledAddSquadronBar","Wrapper","theme","fonts","headings","colors","textLight","brand","background","InputGrp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,iBADJ,EAEIC,mBAFJ,EAGIC,qBAHJ,QAIO,kCAJP;AAMA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,MAAR,QAAqB,8BAArB;;AAYA,MAAMC,cAAkC,GAAGC,KAAK,IAAI;AAAA,oBACdJ,QAAQ,CAAC,EAAD,CADM;AAAA;AAAA,QACzCK,SADyC;AAAA,QAC9BC,YAD8B;;AAAA,qBAElBN,QAAQ,CAAC,EAAD,CAFU;AAAA;AAAA,QAEzCO,QAFyC;AAAA,QAE/BC,SAF+B;;AAIhD,iBAAeC,WAAf,GAA6B;AACzB,UAAMR,eAAe,CAAC,IAAIF,aAAJ,CAAkBM,SAAlB,EAA6BE,QAA7B,CAAD,CAArB;AACA,UAAMH,KAAK,CAACM,cAAN,EAAN;AACAN,IAAAA,KAAK,CAACO,SAAN;AACH;;AAED,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACI,IAAA,QAAQ,EAAGC,CAAD,IAAYN,YAAY,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CADtC;AAEI,IAAA,SAAS,EAAE,eAFf;AAGI,IAAA,WAAW,EAAE,MAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAMA;AACI,IAAA,QAAQ,EAAGF,CAAD,IAAYJ,SAAS,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CADnC;AAEI,IAAA,SAAS,EAAE,UAFf;AAGI,IAAA,WAAW,EAAE,UAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,CADJ,EAaI;AACI,IAAA,SAAS,EAAE,KADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAG,IAAA,IAAI,EAAC,EAAR;AAAW,IAAA,SAAS,EAAE,+BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAE,+BADf;AAEI,IAAA,OAAO,EAAE,MAAM;AACXL,MAAAA,WAAW;AACd,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAM,IAAA,SAAS,EAAE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,CADJ,CAFJ,CAbJ,CADJ;AAgCH,CA1CD;;AA4CA,MAAMM,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,MAAoC;AACxDC,EAAAA,WAAW,EAAED,SAAS,CAACE,QADiC;AAExDC,EAAAA,IAAI,EAAEH,SAAS,CAACI;AAFwC,CAApC,CAAxB;;AAMA,MAAMC,kBAAkB,GAAG;AACvBpB,EAAAA,eAAe,EAAEJ,mBADM;AAEvBa,EAAAA,cAAc,EAAEZ,qBAFO;AAGvBa,EAAAA,SAAS,EAAEf;AAHY,CAA3B;AAMA,OAAO,MAAM0B,oBAAoB,GAAG3B,OAAO,CACvCoB,eADuC,EAEvCM,kBAFuC,CAAP,CAGlClB,cAHkC,CAA7B;AAKP,MAAMoB,OAAO,GAAG7B,MAAM,CAAC,KAAD,CAAT,oBAKIU,KAAK,IAAIA,KAAK,CAACoB,KAAN,CAAYC,KAAZ,CAAkBC,QAL/B,EASUxB,MATV,EAgBSE,KAAK,IAAIA,KAAK,CAACoB,KAAN,CAAYG,MAAZ,CAAmBC,SAhBrC,EA0BSxB,KAAK,IAAIA,KAAK,CAACoB,KAAN,CAAYG,MAAZ,CAAmBC,SA1BrC,EAoFFxB,KAAK,IAAIA,KAAK,CAACoB,KAAN,CAAYG,MAAZ,CAAmBE,KApF1B,EAqHKzB,KAAK,IAAIA,KAAK,CAACoB,KAAN,CAAYG,MAAZ,CAAmBG,UArHjC,CAAb;AAyIA,MAAMC,QAAQ,GAAGrC,MAAM,CAAC,KAAD,CAAT,oBAAd","sourcesContent":["import * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport {connect} from \"react-redux\";\nimport {\n    showSquadronInput,\n    squadronPostRequest,\n    squadronsFetchRequest,\n} from \"../../../store/squadrons/actions\";\nimport {ApplicationState} from \"../../../store\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport {useState} from \"react\";\nimport {postNewSquadron} from \"../../../store/squadrons/sagas\";\nimport {EaseIn} from \"../../animations/transitions\";\n\ninterface Props {\n}\n\ninterface PropsFromDispatch {\n    fetchSquadrons: typeof squadronsFetchRequest;\n    showInput: typeof showSquadronInput;\n}\n\ntype AllProps = Props & PropsFromDispatch;\n\nconst AddSquadronBar: React.FC<AllProps> = props => {\n    const [newSqName, updateSqName] = useState(\"\");\n    const [newSqPAS, updatePAS] = useState(\"\");\n\n    async function handleClick() {\n        await postNewSquadron(new SquadronModel(newSqName, newSqPAS));\n        await props.fetchSquadrons();\n        props.showInput();\n    }\n\n    return (\n        <Wrapper>\n            <InputGrp>\n            <input\n                onChange={(e: any) => updateSqName(e.target.value)}\n                className={\"SquadronInput\"}\n                placeholder={\"Name\"}>\n            </input>\n            <input\n                onChange={(e: any) => updatePAS(e.target.value)}\n                className={\"PASInput\"}\n                placeholder={\"PAS Code\"}>\n            </input>\n            </InputGrp>\n            <div\n                className={\"box\"}>\n                <a href=\"\" className={\"btn btn-white btn-animation-1\"}>\n                    <button\n                        className={\"btn btn-white btn-animation-1\"}\n                        onClick={() => {\n                            handleClick()\n                        }}\n                    >\n                        <span className={\"btn-text\"}>\n                        SAVE\n                        </span>\n                    </button>\n\n                </a>\n            </div>\n        </Wrapper>\n    )\n};\n\nconst mapStateToProps = ({squadrons}: ApplicationState) => ({\n    newSquadron: squadrons.newInput,\n    post: squadrons.posting,\n});\n\n\nconst mapDispatchToProps = {\n    postNewSquadron: squadronPostRequest,\n    fetchSquadrons: squadronsFetchRequest,\n    showInput: showSquadronInput,\n};\n\nexport const StyledAddSquadronBar = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AddSquadronBar);\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 100%;\n  font-family: ${props => props.theme.fonts.headings};\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  -webkit-animation: ${EaseIn} .5s;\n  \n  .SquadronInput {\n  outline: none;\n  width: 60px;\n  height: 20px;\n  background: none;\n  border: solid 1px ${props => props.theme.colors.textLight};\n  border-radius: 4px;\n  color: white;\n  }\n  \n  .PASInput {\n  outline: none;\n   width: 120px;\n  height: 20px;\n   background: none;\n  border: solid 1px ${props => props.theme.colors.textLight};\n  border-radius: 4px;\n  color: white;\n  }\n  \n  .SaveBtn {\n  text-align: center;\n  color: darkgray;\n  outline: none;\n  cursor: pointer;\n  width: 55px;\n  height: 25px;\n  border: none;\n  background: none;\n  border-radius: 50%;\n\n  }\n \n body{\n  //background:lightblue;\n  text-align:center;\n  box-sizing:border-box;\n  font-family:\"Lato\",Sans-serif;\n/*   position:relative; */\n}\n\n.box{\ndisplay: flex;\nflex-direction: row;\njustify-content: center;\n  position: relative;\n  top:50%;\n  margin: 20px;\n  a {\n  pointer-events: none;\n  }\n}\n\n//.a{\n//height: 100%;\n//width: 100%;\n//}\n\n.btn:link,\n.btn:visited{\n  text-decoration: none;\n  text-transform:uppercase;\n  position:relative;\n  top:0;\n  left:0;\n  padding:2px 2px;\n  border-radius:100px;\n  display:inline-block;\n  transition: all .5s;\n}\n\n.btn-white{\nfont-size: 16px;\n  color: ${props => props.theme.colors.brand};\n}\n\n.btn:hover{\n   box-shadow:0px 10px 10px rgba(0,0,0,0.5);\n   transform : translateY(-3px);\n}\n\n.btn:active{\n  box-shadow:0px 5px 10px rgba(0,0,0,0.2);\n  transform:translateY(-1px);\n}\n\n.btn-bottom-animation-1{\n  animation:comeFromBottom 1s ease-out .8s;\n}\n\n.btn::after{\n  content:\"\";\n  text-decoration: none;\n  text-transform:uppercase;\n  position:absolute;\n  width:100%;\n  height:100%;\n  top:0;\n  left:0;\n  border-radius:100px;\n  display:inline-block;\n  z-index:-1;\n  transition: all .5s;\n}\n\n.btn-white::after {\n    background: ${props => props.theme.colors.background};\n}\n\n.btn-animation-1:hover::after {\n    transform: scaleX(1.4) scaleY(1.6);\n    opacity: 0;\n}\n\n@keyframes comeFromBottom{\n  0%{\n    opacity:0;\n    transform:translateY(40px);\n  } \n  100%{\n    opacity:1;\n    transform:translateY(0);\n  }\n}\n`;\n\nconst InputGrp = styled('div')`\n display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  width: 100%;\n`;"]},"metadata":{},"sourceType":"module"}