{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/chairforce/workspace/turbine/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-around;\\n  width: 100%;\\n  font-family: \", \";\\n  font-size: 16px;\\n  margin-top: 5px;\\n  margin-bottom: 5px;\\n  \\n  .SquadronInput {\\n  width: 60px;\\n  height: 20px;\\n  background: none;\\n  border: solid 1px white;\\n  border-radius: 4px;\\n  color: white;\\n  }\\n  \\n  .PASInput {\\n   width: 120px;\\n  height: 20px;\\n   background: none;\\n  border: solid 1px white;\\n  border-radius: 4px;\\n  color: white;\\n  ;\\n  }\\n \\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport { connect } from \"react-redux\";\nimport { squadronPostRequest, updateSquadronInputState } from \"../../../store/squadrons/actions\";\n\nconst AddSquadronBar = ({\n  newSquadron\n}) => React.createElement(Wrapper, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(\"input\", {\n  onChange: e => setNewSquadron(newSquadron + e.target.value),\n  className: \"SquadronInput\",\n  placeholder: \"Name\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}), React.createElement(\"input\", {\n  onChange: e => setNewPASCode(newPASCode + e.target.value),\n  className: \"PASInput\",\n  placeholder: \"PAS Code\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  onClick: () => this.handleClick(newSquadron, newPASCode),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, \"save\"));\n\nconst mapStateToProps = ({\n  squadrons\n}) => ({\n  newSquadron: squadrons.newInput,\n  post: squadrons.posting\n});\n\nconst mapDispatchToProps = {\n  updateSquadronInputState,\n  squadronPostRequest\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSquadronBar);\nconst Wrapper = styled('div')(_templateObject(), props => props.theme.fonts.headings);","map":{"version":3,"sources":["/Users/chairforce/workspace/turbine/client/src/components/layout/leftNavBar/AddSquadronBar.tsx"],"names":["React","styled","connect","squadronPostRequest","updateSquadronInputState","AddSquadronBar","newSquadron","e","setNewSquadron","target","value","setNewPASCode","newPASCode","handleClick","mapStateToProps","squadrons","newInput","post","posting","mapDispatchToProps","Wrapper","props","theme","fonts","headings"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,mBAAR,EAA6BC,wBAA7B,QAA4D,kCAA5D;;AAkBA,MAAMC,cAAkC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAC/B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AACI,EAAA,QAAQ,EAAGC,CAAD,IAAYC,cAAc,CAACF,WAAW,GAAGC,CAAC,CAACE,MAAF,CAASC,KAAxB,CADxC;AAEI,EAAA,SAAS,EAAE,eAFf;AAGA,EAAA,WAAW,EAAE,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAMI;AACI,EAAA,QAAQ,EAAGH,CAAD,IAAYI,aAAa,CAACC,UAAU,GAAGL,CAAC,CAACE,MAAF,CAASC,KAAvB,CADvC;AAEI,EAAA,SAAS,EAAE,UAFf;AAGI,EAAA,WAAW,EAAE,UAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANJ,EAWI;AACA,EAAA,OAAO,EAAE,MAAM,KAAKG,WAAL,CAAiBP,WAAjB,EAA8BM,UAA9B,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXJ,CADZ;;AAmBA,MAAME,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,MAAoC;AACxDT,EAAAA,WAAW,EAAES,SAAS,CAACC,QADiC;AAExDC,EAAAA,IAAI,EAAEF,SAAS,CAACG;AAFwC,CAApC,CAAxB;;AAMA,MAAMC,kBAAkB,GAAG;AACvBf,EAAAA,wBADuB;AAEvBD,EAAAA;AAFuB,CAA3B;AAKA,eAAeD,OAAO,CAClBY,eADkB,EAElBK,kBAFkB,CAAP,CAGbd,cAHa,CAAf;AAKA,MAAMe,OAAO,GAAGnB,MAAM,CAAC,KAAD,CAAT,oBAKIoB,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,QAL/B,CAAb","sourcesContent":["import * as React from 'react';\nimport styled from \"../../../utils/styled\";\nimport {connect} from \"react-redux\";\nimport {squadronPostRequest, updateSquadronInputState} from \"../../../store/squadrons/actions\";\nimport {ApplicationState} from \"../../../store\";\nimport SquadronModel from \"../../../store/squadrons/SquadronModel\";\nimport {useState} from \"react\";\n\ninterface PropsFromState {\n    newSquadron: SquadronModel;\n    posting: boolean;\n}\n\ninterface PropsFromDispatch {\n    updateSquadronInputState: typeof updateSquadronInputState;\n    squadronPostRequest: typeof squadronPostRequest;\n}\n\n// Combine both state + dispatch props - as well as any props we want to pass - in a union type.\ntype AllProps = PropsFromDispatch & PropsFromState;\n\nconst AddSquadronBar: React.FC<AllProps> = ({newSquadron}) => (\n            <Wrapper>\n                <input\n                    onChange={(e: any) => setNewSquadron(newSquadron + e.target.value)}\n                    className={\"SquadronInput\"}\n                placeholder={\"Name\"}>\n                </input>\n                <input\n                    onChange={(e: any) => setNewPASCode(newPASCode + e.target.value)}\n                    className={\"PASInput\"}\n                    placeholder={\"PAS Code\"}>\n                </input>\n                <button\n                onClick={() => this.handleClick(newSquadron, newPASCode)}>\n                    save\n                </button>\n            </Wrapper>\n);\n\nconst mapStateToProps = ({squadrons}: ApplicationState) => ({\n    newSquadron: squadrons.newInput,\n    post: squadrons.posting,\n});\n\n\nconst mapDispatchToProps = {\n    updateSquadronInputState,\n    squadronPostRequest\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(AddSquadronBar);\n\nconst Wrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  width: 100%;\n  font-family: ${props => props.theme.fonts.headings};\n  font-size: 16px;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  \n  .SquadronInput {\n  width: 60px;\n  height: 20px;\n  background: none;\n  border: solid 1px white;\n  border-radius: 4px;\n  color: white;\n  }\n  \n  .PASInput {\n   width: 120px;\n  height: 20px;\n   background: none;\n  border: solid 1px white;\n  border-radius: 4px;\n  color: white;\n  ;\n  }\n \n`;"]},"metadata":{},"sourceType":"module"}